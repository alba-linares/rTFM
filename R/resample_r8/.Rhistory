labels_row = areas_siose_gen_x_hum_H_usos$HUMEDAL,
display_numbers = TRUE,
number_color = "black",
fontsize_number = 8)
pheatmap(areas_siose_gen_x_hum_H_usos[2:6],
main = "Área de los usos del suelo dentro del humedal en 2020",
labels_row = areas_siose_gen_x_hum_H_usos$HUMEDAL,
display_numbers = TRUE,
number_color = "black",
fontsize_number = 8)
# Este gráfico representa los cambios de usos del suelo (DENTRO DEL HUMEDAL):
areas_dif_gen_x_hum_H_usos$HUMEDAL<-as.factor(areas_dif_gen_x_hum_H_usos$HUMEDAL)
pheatmap(areas_dif_gen_x_hum_H_usos[2:6],
labels_row = areas_dif_gen_x_hum_H_usos$HUMEDAL,
display_numbers = TRUE,
number_color = "black",
fontsize_number = 8)
pheatmap(areas_siose_gen_x_hum_usos[2:6],
main = "Área de los usos del suelo en 2020",
labels_row = areas_siose_gen_x_hum_usos$HUMEDAL,
display_numbers = TRUE,
number_color = "black",
fontsize_number = 8)
# Áreas por usos 1984-2020 (SIOSE, MUCVA) ESPECÍFICOS #####################################################
areas_mucva_especifico<-as.data.frame(tapply(datos_mucva$AREA_USOS, INDEX=datos_mucva$USOS_DEFINITIVOS, FUN=sum))
colnames(areas_mucva_especifico)<-"areas"
areas_mucva_especifico
areas_siose_especifico<-as.data.frame(tapply(datos_siose$AREA_USOS, INDEX=datos_siose$USOS_DEFINITIVOS, FUN=sum))
colnames(areas_siose_especifico)<-"areas"
areas_siose_especifico
areas_dif_especifico<-as.data.frame(tapply(datos_dif$AREA_USOS, INDEX=datos_dif$USOS_DEFINITIVOS, FUN=sum))
colnames(areas_dif_especifico)<-"areas"
areas_dif_especifico
# PORCENTAJE %
total_area_siose <- sum(areas_siose_especifico$areas) # Calcular el total de todas las áreas
areas_siose_especifico <- areas_siose_especifico %>%
mutate(PORCENTAJE = (areas / total_area_siose) * 100) # Añadir una nueva columna con el porcentaje que representa cada uso del suelo
areas_siose_especifico
total_area_mucva <- sum(areas_mucva_especifico$areas) # Calcular el total de todas las áreas
areas_mucva_especifico <- areas_mucva_especifico %>%
mutate(PORCENTAJE = (areas / total_area_mucva) * 100) # Añadir una nueva columna con el porcentaje que representa cada uso del suelo
areas_mucva_especifico
# Esto creo que no tiene sentido hacerlo:
#total_area_dif <- sum(areas_dif_especifico$areas) # Calcular el total de todas las áreas
#areas_dif_especifico <- areas_dif_especifico %>%
#  mutate(PORCENTAJE = (areas / total_area_dif) * 100) # Añadir una nueva columna con el porcentaje que representa cada uso del suelo
#areas_dif_especifico
# Áreas por usos 1984-2020 (SIOSE, MUCVA) GENERALES #####################################################
areas_mucva_general<-as.data.frame(tapply(datos_mucva$AREA_USOS, INDEX=datos_mucva$USOS_GENERAL, FUN=sum))
colnames(areas_mucva_general)<-"areas"
areas_mucva_general
areas_siose_general<-as.data.frame(tapply(datos_siose$AREA_USOS, INDEX=datos_siose$USOS_GENERAL, FUN=sum))
colnames(areas_siose_general)<-"areas"
areas_siose_general
areas_dif_general<-as.data.frame(tapply(datos_dif$AREA_USOS, INDEX=datos_dif$USOS_GENERAL, FUN=sum))
colnames(areas_dif_general)<-"areas"
areas_dif_general
#Y POR HUMEDAL
areas_mucva_gen_x_hum <- datos_mucva %>%
group_by(HUMEDAL, USOS_GENERAL) %>%  # Agrupa por humedal y uso general
summarise(SUMA_AREAS = sum(AREA_USOS, na.rm = TRUE))  # Sumar las áreas por grupo
areas_mucva_gen_x_hum_usos <- pivot_wider(areas_mucva_gen_x_hum,names_from = USOS_GENERAL, values_from = SUMA_AREAS)
areas_siose_gen_x_hum <- datos_siose %>%
group_by(HUMEDAL, USOS_GENERAL) %>%  # Agrupa por humedal y uso general
summarise(SUMA_AREAS = sum(AREA_USOS, na.rm = TRUE))  # Sumar las áreas por grupo
areas_siose_gen_x_hum_usos <- pivot_wider(areas_siose_gen_x_hum,names_from = USOS_GENERAL, values_from = SUMA_AREAS)
areas_dif_gen_x_hum <- datos_dif %>%
group_by(HUMEDAL, USOS_GENERAL) %>%  # Agrupa por humedal y uso general
summarise(SUMA_AREAS = sum(AREA_USOS, na.rm = TRUE))  # Sumar las áreas por grupo
areas_dif_gen_x_hum_usos <- pivot_wider(areas_dif_gen_x_hum,names_from = USOS_GENERAL, values_from = SUMA_AREAS)
# Estos gráficos representan los usos del suelo con un área significativamente distinta:
areas_siose_gen_x_hum_usos$HUMEDAL<-as.factor(areas_siose_gen_x_hum_usos$HUMEDAL)
pheatmap(areas_siose_gen_x_hum_usos[2:6],
main = "Área de los usos del suelo en 2020",
labels_row = areas_siose_gen_x_hum_usos$HUMEDAL,
display_numbers = TRUE,
number_color = "black",
fontsize_number = 8)
?pheatmap
View(datos)
areas_mucva_gen_x_hum_usos$HUMEDAL<-as.factor(areas_mucva_gen_x_hum_usos$HUMEDAL)
pheatmap(areas_mucva_gen_x_hum_usos[2:6],
main = "Área de los usos del suelo en 1984",
labels_row = areas_mucva_gen_x_hum_usos$HUMEDAL,
display_numbers = TRUE,
number_color = "black",
fontsize_number = 8)
pheatmap(areas_siose_gen_x_hum_usos[2:6],
main = "Área de los usos del suelo en 2020",
labels_row = areas_siose_gen_x_hum_usos$HUMEDAL,
display_numbers = TRUE,
number_color = "black",
fontsize_number = 8)
# Este gráfico representa los cambios de usos del suelo significativamente distintos:
areas_dif_gen_x_hum_usos$HUMEDAL<-as.factor(areas_dif_gen_x_hum_usos$HUMEDAL)
pheatmap(areas_dif_gen_x_hum_usos[2:6],
main = "Cambio en el área de los usos del suelo entre 1984-2020",
labels_row = areas_dif_gen_x_hum_usos$HUMEDAL,
display_numbers = TRUE,
number_color = "black",
fontsize_number = 8)
# Estos gráficos representan los usos del suelo (DENTRO DEL HUMEDAL):
areas_siose_gen_x_hum_H_usos$HUMEDAL<-as.factor(areas_siose_gen_x_hum_H_usos$HUMEDAL)
pheatmap(areas_siose_gen_x_hum_H_usos[2:6],
main = "Área de los usos del suelo dentro del humedal en 2020",
labels_row = areas_siose_gen_x_hum_H_usos$HUMEDAL,
display_numbers = TRUE,
number_color = "black",
fontsize_number = 8)
areas_mucva_gen_x_hum_H_usos$HUMEDAL<-as.factor(areas_mucva_gen_x_hum_H_usos$HUMEDAL)
pheatmap(areas_mucva_gen_x_hum_H_usos[2:6],
main = "Área de los usos del suelo dentro del humedal en 1984",
labels_row = areas_mucva_gen_x_hum_H_usos$HUMEDAL,
display_numbers = TRUE,
number_color = "black",
fontsize_number = 8)
pheatmap(areas_dif_gen_x_hum_H_usos[2:6],
main = "Cambios en el área de los usos del suelo dentro del humedal entre 1984-2020",
labels_row = areas_dif_gen_x_hum_H_usos$HUMEDAL,
display_numbers = TRUE,
number_color = "black",
fontsize_number = 8,
cluster_cols = FALSE,  # Mantiene el orden original de las columnas
angle_col = 45)        # Inclina los nombres de las columnas 45 grados
pheatmap(areas_dif_gen_x_hum_H_usos[2:6],
main = "Cambios en el área de los usos del suelo dentro del humedal entre 1984-2020",
labels_row = areas_dif_gen_x_hum_H_usos$HUMEDAL,
display_numbers = TRUE,
number_color = "black",
fontsize_number = 8,
cluster_cols = T,  # Mantiene el orden original de las columnas
angle_col = 45)        # Inclina los nombres de las columnas 45 grados
FALSE
pheatmap(areas_dif_gen_x_hum_H_usos[2:6],
main = "Cambios en el área de los usos del suelo dentro del humedal entre 1984-2020",
labels_row = areas_dif_gen_x_hum_H_usos$HUMEDAL,
display_numbers = TRUE,
number_color = "black",
fontsize_number = 8,
cluster_cols = FALSE,  # Mantiene el orden original de las columnas
angle_col = 45)        # Inclina los nombres de las columnas 45 grados
#library
library(funtimes)
library(Kendall)
# Data
setwd("D:/Escritorio/TFM/rTFM") # ¡Recuerda hacer setwd("D:/Escritorio/TFM/rTFM") en el portátil!
data<-read.delim("Google Earth Engine/zones_buffer_lswi/lswi_zone01b.csv", sep=",", dec = ".")
################################################################################
# Mann-Kendall espacial #
################################################################################
library(here)
library(spatialEco)
library(terra)
# Definir años
years <- 1999:2021
################################################################################
# Mann-Kendall espacial #
################################################################################
library(here)
library(spatialEco)
library(terra)
# Definir años
years <- 1999:2021
# Definir la ruta base ####################### ELEGIR ########################
base_path_H <- "D:/Escritorio/TFM/rTFM/Google Earth Engine/zones_lswi/humedal/"
base_path_B <- "D:/Escritorio/TFM/rTFM/Google Earth Engine/zones_lswi/buffer/"
pheatmap(areas_dif_gen_x_hum_H_usos[2:6],
main = "Cambios en el área de los usos del suelo dentro del humedal entre 1984-2020",
labels_row = areas_dif_gen_x_hum_H_usos$HUMEDAL,
display_numbers = TRUE,
number_color = "black",
fontsize_number = 8,
cluster_cols = T,  # Mantiene el orden original de las columnas
angle_col = 45)        # Inclina los nombres de las columnas 45 grados
pheatmap(areas_dif_gen_x_hum_H_usos[2:6],
main = "Cambios en el área de los usos del suelo dentro del humedal entre 1984-2020",
labels_row = areas_dif_gen_x_hum_H_usos$HUMEDAL,
display_numbers = TRUE,
number_color = "black",
fontsize_number = 8,
cluster_cols = T,  # Mantiene el orden original de las columnas
angle_col = 45)        # Inclina los nombres de las columnas 45 grados
################################################################################
# Mann-Kendall espacial #
################################################################################
library(here)
library(spatialEco)
library(terra)
# Definir años
years <- 1999:2021
base_path <- "D:/Escritorio/TFM/rTFM/Google Earth Engine/zones_lswi/buffer/"
paths <- c(
"zone01b_albufera_honda/",
"zone02b_albufera_nueva/",
"zone03b_barranco_del_agua/",
"zone04b_canada_de_las_norias/",
"zone05b_cola_del_embalse_del_negratin/",
"zone06b_charcones_de_punta_entinas/",
"zone07b_humedales_de_baza/",
"zone08b_laguna_de_la_gravera/",
"zone09b_rambla_morales/",
"zone10b_ribera_de_la_algaida/",
"zone11b_rio_antas/",
"zone12b_salinas_de_cabo_de_gata/",
"zone13b_salar_de_los_canos/",
"zone14b_salinas_de_cerrillos/",
"zone15b_saladar_del_margen/"
)
zones <- c("zone01b","zone02b","zone03b",
"zone04b","zone05b","zone06b",
"zone07b","zone08b","zone09b",
"zone10b","zone11b","zone12b",
"zone13b","zone14b","zone15b")
# Crear una lista para almacenar los datos de cada zona
r_zones <- list()
# Loop para cargar los archivos de cada zona sin cambiar el directorio de trabajo
for (i in 1:length(paths)) {
# Cargar los archivos usando lapply, construyendo la ruta completa
r_zones[[zones[i]]] <- lapply(years, function(year) {
# Crear la ruta completa del archivo TIFF
file_path <- paste0(base_path, paths[i], zones[i], "_lswi_", year, ".tif")
# Cargar el archivo .tif
rast(file_path)
})
}
r_zone01b <- rast(r_zones$zone01b)
r_zone02b <- rast(r_zones$zone02b)
r_zone03b <- rast(r_zones$zone03b)
r_zone04b <- rast(r_zones$zone04b)
r_zone05b <- rast(r_zones$zone05b)
r_zone06b <- rast(r_zones$zone06b)
r_zone07b <- rast(r_zones$zone07b)
r_zone08b <- rast(r_zones$zone08b)
r_zone09b <- rast(r_zones$zone09b)
r_zone10b <- rast(r_zones$zone10b)
r_zone11b <- rast(r_zones$zone11b)
r_zone12b <- rast(r_zones$zone12b)
r_zone13b <- rast(r_zones$zone13b)
r_zone14b <- rast(r_zones$zone14b)
r_zone15b <- rast(r_zones$zone15b)
# Crear una lista para almacenar los datos de cada zona
r_zones <- list()
# Loop para cargar los archivos de cada zona sin cambiar el directorio de trabajo
for (i in 1:length(paths)) {
# Cargar los archivos usando lapply, construyendo la ruta completa
r_zones[[zones[i]]] <- lapply(years, function(year) {
# Crear la ruta completa del archivo TIFF
file_path <- paste0(base_path, paths[i], zones[i], "_lswi_", year, ".tif")
# Cargar el archivo .tif
rast(file_path)
})
}
r_zone01b <- rast(r_zones$zone01b)
r_zone02b <- rast(r_zones$zone02b)
r_zone03b <- rast(r_zones$zone03b)
r_zone04b <- rast(r_zones$zone04b)
r_zone05b <- rast(r_zones$zone05b)
r_zone06b <- rast(r_zones$zone06b)
r_zone07b <- rast(r_zones$zone07b)
r_zone08b <- rast(r_zones$zone08b)
r_zone09b <- rast(r_zones$zone09b)
r_zone10b <- rast(r_zones$zone10b)
r_zone11b <- rast(r_zones$zone11b)
r_zone12b <- rast(r_zones$zone12b)
r_zone13b <- rast(r_zones$zone13b)
r_zone14b <- rast(r_zones$zone14b)
r_zone15b <- rast(r_zones$zone15b)
r_list <- list(r_zone01b,r_zone02b,r_zone03b,
r_zone04b,r_zone05b,r_zone06b,
r_zone07b,r_zone08b,r_zone09b,
r_zone10b,r_zone11b,r_zone12b,
r_zone13b,r_zone14b,r_zone15b)
# Loop para agregar y escribir raster para cada zona
setwd("D:/Escritorio/TFM/rTFM/R/resample_r8") # Para exportar los .tif a esta carpeta específica
mk_results <- list()
for (i in 1:length(r_list)) {
# Obtener el raster de la zona actual
r <- r_list[[i]]
# Agregar con un factor de 8 (mayor resolución aprox. 200m)
r8 <- aggregate(r, fact = 8)
############################# EXPORTAR #######################################
# Escribir el raster resultante en un archivo TIFF
#setwd("D:/Escritorio/TFM/rTFM/R/resample_r8")
#output_filename <- paste0("input_", zones[i], "_lswi_ts_scale8.tif")
#writeRaster(r8, output_filename, overwrite = TRUE)
# Imprimir mensaje de progreso
#print(paste("Archivo guardado:", output_filename))
################### SIGNIFICANCIA P-VALUE < 0.05 #############################
# Calcular las estadísticas de Mann-Kendall
mk <- raster.kendall(r8, method = "none")
# Guardar el resultado en la lista con el nombre de la zona
mk_results[[zones[i]]] <- mk
# Re-clasificar celdas con valores de p menores a 0.05 (significativo)
signif <- mk$`p-value` < 0.05
# Graficar las celdas significativas y no significativas
plot(signif, main = paste("Celdas significativas -", zones[i]))
plot(!signif, main = paste("Celdas no significativas -", zones[i]))
# Crear un nuevo raster que contenga los valores de pendiente originales
mk_slope <- mk$slope
# Asignar valor NA a las celdas con p-valor mayor a 0.05 (no significativas)
mk_slope[!signif] <- NA
# Graficar las pendientes significativas
plot(mk_slope, main = paste("Pendientes significativas -", zones[i]))
# Guardar los archivos raster con y sin significancia
output_signif_filename <- paste0("output_", zones[i], "_mk_slope_scale8_signif.tif")
output_slope_filename <- paste0("output_", zones[i], "_mk_slope_scale8.tif")
############################# EXPORTAR #######################################
# Guardar solo los valores significativos
writeRaster(mk_slope, output_signif_filename, overwrite = TRUE)
# Guardar todas las pendientes (sin NA)
writeRaster(mk$slope, output_slope_filename, overwrite = TRUE)
# Imprimir mensaje de progreso
print(paste("Archivos guardados para:", zones[i]))
}
setwd("D:/Escritorio/TFM/rTFM") # Vuelvo al setwd de antes
# Reclass cells with slope values lower then 0.05 (TRUE) and the rest (FALSE)
signif<-mk$`p-value`<0.05
plot(signif)
plot(!signif)
# New raster object containing original slope values
mk_slope<-mk$slope
# Assign NA value to all cells with p-value higher than the threshold (cells with signif == FALSE)
mk_slope[!signif]<-NA
plot(mk_slope)
writeRaster(mk_slope,'output_mk_slope_scale8_signif.tif',overwrite=T)
for (i in 1:length(r_list)) {
# Obtener el raster de la zona actual
r <- r_list[[i]]
# Agregar con un factor de 8 (mayor resolución aprox. 200m)
r8 <- aggregate(r, fact = 8)
############################# EXPORTAR #######################################
# Escribir el raster resultante en un archivo TIFF
setwd("D:/Escritorio/TFM/rTFM/R/resample_r8")
output_filename <- paste0("input_", zones[i], "_lswi_ts_scale8.tif")
writeRaster(r8, output_filename, overwrite = TRUE)
# Imprimir mensaje de progreso
print(paste("Archivo guardado:", output_filename))
################### SIGNIFICANCIA P-VALUE < 0.05 #############################
# Calcular las estadísticas de Mann-Kendall
mk <- raster.kendall(r8, method = "none")
# Guardar el resultado en la lista con el nombre de la zona
mk_results[[zones[i]]] <- mk
# Re-clasificar celdas con valores de p menores a 0.05 (significativo)
signif <- mk$`p-value` < 0.05
# Graficar las celdas significativas y no significativas
plot(signif, main = paste("Celdas significativas -", zones[i]))
plot(!signif, main = paste("Celdas no significativas -", zones[i]))
# Crear un nuevo raster que contenga los valores de pendiente originales
mk_slope <- mk$slope
# Asignar valor NA a las celdas con p-valor mayor a 0.05 (no significativas)
mk_slope[!signif] <- NA
# Graficar las pendientes significativas
plot(mk_slope, main = paste("Pendientes significativas -", zones[i]))
# Guardar los archivos raster con y sin significancia
output_signif_filename <- paste0("output_", zones[i], "_mk_slope_scale8_signif.tif")
output_slope_filename <- paste0("output_", zones[i], "_mk_slope_scale8.tif")
############################# EXPORTAR #######################################
# Guardar solo los valores significativos
writeRaster(mk_slope, output_signif_filename, overwrite = TRUE)
# Guardar todas las pendientes (sin NA)
writeRaster(mk$slope, output_slope_filename, overwrite = TRUE)
# Imprimir mensaje de progreso
print(paste("Archivos guardados para:", zones[i]))
}
# Guardar todas las pendientes (sin NA)
writeRaster(mk$slope, here("R/mk/", output_slope_filename), overwrite = TRUE)
# Guardar todas las pendientes (sin NA)
writeRaster(mk$slope, here("Excel", output_slope_filename), overwrite = TRUE)
# Guardar todas las pendientes (sin NA)
writeRaster(mk$slope, here("R/mk/", output_slope_filename), overwrite = TRUE)
for (i in 1:length(r_list)) {
# Obtener el raster de la zona actual
r <- r_list[[i]]
# Agregar con un factor de 8 (mayor resolución aprox. 200m)
r8 <- aggregate(r, fact = 8)
############################# EXPORTAR #######################################
# Escribir el raster resultante en un archivo TIFF
setwd("D:/Escritorio/TFM/rTFM/R/resample_r8")
output_filename <- paste0("input_", zones[i], "_lswi_ts_scale8.tif")
writeRaster(r8, here("R/resample_r8/", output_filename), overwrite = TRUE)
# Imprimir mensaje de progreso
print(paste("Archivo guardado:", output_filename))
################### SIGNIFICANCIA P-VALUE < 0.05 #############################
# Calcular las estadísticas de Mann-Kendall
mk <- raster.kendall(r8, method = "none")
# Guardar el resultado en la lista con el nombre de la zona
mk_results[[zones[i]]] <- mk
# Re-clasificar celdas con valores de p menores a 0.05 (significativo)
signif <- mk$`p-value` < 0.05
# Graficar las celdas significativas y no significativas
plot(signif, main = paste("Celdas significativas -", zones[i]))
plot(!signif, main = paste("Celdas no significativas -", zones[i]))
# Crear un nuevo raster que contenga los valores de pendiente originales
mk_slope <- mk$slope
# Asignar valor NA a las celdas con p-valor mayor a 0.05 (no significativas)
mk_slope[!signif] <- NA
# Graficar las pendientes significativas
plot(mk_slope, main = paste("Pendientes significativas -", zones[i]))
# Guardar los archivos raster con y sin significancia
output_signif_filename <- paste0("output_", zones[i], "_mk_slope_scale8_signif.tif")
output_slope_filename <- paste0("output_", zones[i], "_mk_slope_scale8.tif")
############################# EXPORTAR #######################################
# Guardar solo los valores significativos
writeRaster(mk_slope, output_signif_filename, overwrite = TRUE)
# Guardar todas las pendientes (sin NA)
writeRaster(mk$slope, here("R/mk/", output_slope_filename), overwrite = TRUE)
# Imprimir mensaje de progreso
print(paste("Archivos guardados para:", zones[i]))
}
pheatmap(areas_dif_gen_x_hum_H_usos[2:6],
main = "Cambios en el área de los usos del suelo dentro del humedal entre 1984-2020",
labels_row = areas_dif_gen_x_hum_H_usos$HUMEDAL,
display_numbers = TRUE,
number_color = "black",
fontsize_number = 8,
cluster_cols = T,  # Mantiene el orden original de las columnas
angle_col = 45)        # Inclina los nombres de las columnas 45 grados
pheatmap(areas_dif_gen_x_hum_H_usos[2:6],
main = "Cambios en el área de los usos del suelo dentro del humedal entre 1984-2020",
labels_row = areas_dif_gen_x_hum_H_usos$HUMEDAL,
display_numbers = TRUE,
number_color = "black",
fontsize_number = 8,
cluster_cols = F,  # Mantiene el orden original de las columnas
angle_col = 45)        # Inclina los nombres de las columnas 45 grados
pheatmap(areas_dif_gen_x_hum_H_usos[2:6],
main = "Cambios en el área de los usos del suelo dentro del humedal entre 1984-2020",
labels_row = areas_dif_gen_x_hum_H_usos$HUMEDAL,
display_numbers = TRUE,
number_color = "black",
fontsize_number = 8,
cluster_cols = F,  # Mantiene el orden original de las columnas
angle_col = 60)        # Inclina los nombres de las columnas 45 grados
pheatmap(areas_dif_gen_x_hum_H_usos[2:6],
main = "Cambios en el área de los usos del suelo dentro del humedal entre 1984-2020",
labels_row = areas_dif_gen_x_hum_H_usos$HUMEDAL,
display_numbers = TRUE,
number_color = "black",
fontsize_number = 8,
cluster_cols = F,  # Mantiene el orden original de las columnas
angle_col = 90)        # Inclina los nombres de las columnas 45 grados
pheatmap(areas_dif_gen_x_hum_H_usos[2:6],
main = "Cambios en el área de los usos del suelo dentro del humedal entre 1984-2020",
labels_row = areas_dif_gen_x_hum_H_usos$HUMEDAL,
display_numbers = TRUE,
number_color = "black",
fontsize_number = 8,
cluster_cols = F,  # Mantiene el orden original de las columnas
angle_col = 0)        # Inclina los nombres de las columnas 45 grados
pheatmap(areas_dif_gen_x_hum_H_usos[2:6],
main = "Cambios en el área de los usos del suelo dentro del humedal entre 1984-2020",
labels_row = areas_dif_gen_x_hum_H_usos$HUMEDAL,
display_numbers = TRUE,
number_color = "black",
fontsize_number = 8,
cluster_cols = F,  # Mantiene el orden original de las columnas
angle_col = 315)        # Inclina los nombres de las columnas 45 grados
pheatmap(areas_dif_gen_x_hum_H_usos[2:6],
main = "Cambios en el área de los usos del suelo dentro del humedal entre 1984-2020",
labels_row = areas_dif_gen_x_hum_H_usos$HUMEDAL,
display_numbers = TRUE,
number_color = "black",
fontsize_number = 8,
cluster_cols = F,  # Mantiene el orden original de las columnas
angle_col = 45)        # Inclina los nombres de las columnas 45 grados
# Estos gráficos representan los usos del suelo con un área significativamente distinta:
areas_siose_gen_x_hum_usos$HUMEDAL<-as.factor(areas_siose_gen_x_hum_usos$HUMEDAL)
pheatmap(areas_siose_gen_x_hum_usos[2:6],
main = "Área de los usos del suelo en 2020",
labels_row = areas_siose_gen_x_hum_usos$HUMEDAL,
display_numbers = TRUE,
number_color = "black",
cluster_cols = F,  # Mantiene el orden original de las columnas
angle_col = 45,    # Inclina los nombres de las columnas 45 grados
fontsize_number = 8)
head(areas_dif_gen_x_hum_usos)
head(areas_dif_gen_x_hum)
# PRUEBA: PORCENTAJE PARA EL GRÁFICO ##########################################
areas_dif_general<-as.data.frame(tapply(datos_dif$AREA_USOS, INDEX=datos_dif$USOS_GENERAL, FUN=sum))
colnames(areas_dif_general)<-"areas"
areas_dif_general
total_areas_dif_gen_x_hum_dif <- sum(areas_mucva_especifico$areas) # Calcular el total de todas las áreas
areas_dif_general <- areas_dif_general %>%
mutate(PORCENTAJE = (areas / total_area_mucva) * 100) # Añadir una nueva columna con el porcentaje que representa cada uso del suelo
areas_dif_general
total_areas_dif_gen_x_hum_dif <- sum(areas_dif_general$areas) # Calcular el total de todas las áreas
areas_dif_general <- areas_dif_general %>%
mutate(PORCENTAJE = (areas / total_area_dif) * 100) # Añadir una nueva columna con el porcentaje que representa cada uso del suelo
areas_dif_general
# PRUEBA: PORCENTAJE PARA EL GRÁFICO ##########################################
areas_dif_general<-as.data.frame(tapply(datos_dif$AREA_USOS, INDEX=datos_dif$USOS_GENERAL, FUN=sum))
colnames(areas_dif_general)<-"areas"
areas_dif_general
total_areas_dif_gen_x_hum_dif <- sum(areas_dif_general$areas) # Calcular el total de todas las áreas
areas_dif_general <- areas_dif_general %>%
mutate(PORCENTAJE = (areas / total_area_dif) * 100) # Añadir una nueva columna con el porcentaje que representa cada uso del suelo
areas_dif_general
# PRUEBA: PORCENTAJE PARA EL GRÁFICO ##########################################
areas_siose_general<-as.data.frame(tapply(datos_siose$AREA_USOS, INDEX=datos_siose$USOS_GENERAL, FUN=sum))
colnames(areas_siose_general)<-"areas"
areas_siose_general
total_areas_siose_gen_x_hum_siose <- sum(areas_siose_general$areas) # Calcular el total de todas las áreas
areas_siose_general <- areas_siose_general %>%
mutate(PORCENTAJE = (areas / total_area_siose) * 100) # Añadir una nueva columna con el porcentaje que representa cada uso del suelo
areas_siose_general
areas_mucva_general<-as.data.frame(tapply(datos_mucva$AREA_USOS, INDEX=datos_mucva$USOS_GENERAL, FUN=sum))
colnames(areas_mucva_general)<-"areas"
areas_mucva_general
total_areas_mucva_gen_x_hum_mucva <- sum(areas_mucva_general$areas) # Calcular el total de todas las áreas
areas_mucva_general <- areas_mucva_general %>%
mutate(PORCENTAJE = (areas / total_area_mucva) * 100) # Añadir una nueva columna con el porcentaje que representa cada uso del suelo
areas_mucva_general
