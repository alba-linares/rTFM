intercept_lm[i] <- summary_lm$coefficients[1, "Estimate"]
slope_lm[i] <- summary_lm$coefficients[2, "Estimate"]
p_value_slope[i] <- summary_lm$coefficients[2, "Pr(>|t|)"]
r_squared[i] <- summary_lm$r.squared
adj_r_squared[i] <- summary_lm$adj.r.squared
tau_mk_test_2[i] <- mk_test_2$tau
p_value_mk_test_2[i] <- mk_test_2$sl
}
intercept_lm
datalist<-0
datalist<-c(data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone01b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone02b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone03b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone04b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone05b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone06b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone07b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone08b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone09b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone10b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone11b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone12b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone13b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone14b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone15b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone01.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone02.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone03.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone04.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone05.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone06.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone07.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone08.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone09.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone10.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone11.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone12.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone13.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone14.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone15.csv", sep=",", dec = "."))
# 2. Extraer los valores relevantes
p_value_nt_test <- 0
p_value_mk_test <- 0
tau_mk_test <- 0
intercept_lm <- 0
slope_lm <- 0
p_value_slope <- 0
r_squared <- 0
adj_r_squared <- 0
tau_mk_test_2 <- 0
p_value_mk_test_2 <- 0
p_value_nt_test <- 0
p_value_mk_test <- 0
tau_mk_test <- 0
datalist<-0
datalist<-c(data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone01b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone02b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone03b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone04b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone05b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone06b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone07b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone08b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone09b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone10b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone11b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone12b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone13b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone14b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone15b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone01.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone02.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone03.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone04.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone05.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone06.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone07.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone08.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone09.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone10.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone11.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone12.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone13.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone14.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone15.csv", sep=",", dec = "."))
for (i in 1:30) {
datalist[i]
nt_test <- notrend_test(datalist$LSWI)
mk_test <- notrend_test(datalist$LSWI, test='MK')
lm_model <- lm(data$LSWI ~ datalist$Year)
summary_lm <- summary(lm_model)
mk_test_2 <- MannKendall(datalist$LSWI)
intercept_lm[i] <- summary_lm$coefficients[1, "Estimate"]
slope_lm[i] <- summary_lm$coefficients[2, "Estimate"]
p_value_slope[i] <- summary_lm$coefficients[2, "Pr(>|t|)"]
r_squared[i] <- summary_lm$r.squared
adj_r_squared[i] <- summary_lm$adj.r.squared
tau_mk_test_2[i] <- mk_test_2$tau
p_value_mk_test_2[i] <- mk_test_2$sl
}
# Inicializar las variables que almacenarán los resultados
intercept_lm <- numeric(30)
slope_lm <- numeric(30)
p_value_slope <- numeric(30)
r_squared <- numeric(30)
adj_r_squared <- numeric(30)
tau_mk_test_2 <- numeric(30)
p_value_mk_test_2 <- numeric(30)
# Leer los archivos en una lista de data frames
file_paths <- list.files("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/",
pattern = "lswi_zone.*\\.csv$", full.names = TRUE)
# Cargar todos los archivos en una lista
datalist <- lapply(file_paths, read.delim, sep = ",", dec = ".")
# Iterar sobre la lista de data frames
for (i in 1:length(datalist)) {
data <- datalist[[i]]
# Realizar los análisis
nt_test <- notrend_test(data$LSWI)
mk_test <- notrend_test(data$LSWI, test='MK')
lm_model <- lm(LSWI ~ Year, data = data)
summary_lm <- summary(lm_model)
mk_test_2 <- MannKendall(data$LSWI)
# Guardar los resultados en los vectores predefinidos
intercept_lm[i] <- summary_lm$coefficients[1, "Estimate"]
slope_lm[i] <- summary_lm$coefficients[2, "Estimate"]
p_value_slope[i] <- summary_lm$coefficients[2, "Pr(>|t|)"]
r_squared[i] <- summary_lm$r.squared
adj_r_squared[i] <- summary_lm$adj.r.squared
tau_mk_test_2[i] <- mk_test_2$tau
p_value_mk_test_2[i] <- mk_test_2$sl
}
# Inicializar las variables que almacenarán los resultados
intercept_lm <- numeric(30)
slope_lm <- numeric(30)
p_value_slope <- numeric(30)
r_squared <- numeric(30)
adj_r_squared <- numeric(30)
tau_mk_test_2 <- numeric(30)
p_value_mk_test_2 <- numeric(30)
# Leer los archivos en una lista de data frames
file_paths <- list.files("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/",
pattern = "lswi_zone.*\\.csv$", full.names = TRUE)
# Cargar todos los archivos en una lista
datalist <- lapply(file_paths, read.delim, sep = ",", dec = ".")
# Iterar sobre la lista de data frames
for (i in 1:length(datalist)) {
data <- datalist[[i]]
# Realizar los análisis
nt_test <- notrend_test(data$LSWI)
mk_test <- notrend_test(data$LSWI, test='MK')
lm_model <- lm(LSWI ~ Year, data = data)
summary_lm <- summary(lm_model)
mk_test_2 <- MannKendall(data$LSWI)
# Guardar los resultados en los vectores predefinidos
intercept_lm[i] <- summary_lm$coefficients[1, "Estimate"]
slope_lm[i] <- summary_lm$coefficients[2, "Estimate"]
p_value_slope[i] <- summary_lm$coefficients[2, "Pr(>|t|)"]
r_squared[i] <- summary_lm$r.squared
adj_r_squared[i] <- summary_lm$adj.r.squared
tau_mk_test_2[i] <- mk_test_2$tau
p_value_mk_test_2[i] <- mk_test_2$sl
}
# Inicializar las variables que almacenarán los resultados
n <- 30  # Número de archivos que esperas procesar
intercept_lm <- numeric(n)
slope_lm <- numeric(n)
p_value_slope <- numeric(n)
r_squared <- numeric(n)
adj_r_squared <- numeric(n)
tau_mk_test_2 <- numeric(n)
p_value_mk_test_2 <- numeric(n)
# Leer los archivos en una lista de data frames
file_paths <- list.files("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/",
pattern = "lswi_zone.*\\.csv$", full.names = TRUE)
# Verificar cuántos archivos se han encontrado
print(paste("Número de archivos encontrados:", length(file_paths)))
# Cargar todos los archivos en una lista
datalist <- lapply(file_paths, read.delim, sep = ",", dec = ".")
# Verificar que la lista tiene el número esperado de data frames
print(paste("Número de data frames en datalist:", length(datalist)))
# Iterar sobre la lista de data frames
for (i in 1:length(datalist)) {
data <- datalist[[i]]
# Realizar los análisis
nt_test <- notrend_test(data$LSWI)
mk_test <- notrend_test(data$LSWI, test='MK')
lm_model <- lm(LSWI ~ Year, data = data)
summary_lm <- summary(lm_model)
mk_test_2 <- MannKendall(data$LSWI)
# Guardar los resultados en los vectores predefinidos
intercept_lm[i] <- summary_lm$coefficients[1, "Estimate"]
slope_lm[i] <- summary_lm$coefficients[2, "Estimate"]
p_value_slope[i] <- summary_lm$coefficients[2, "Pr(>|t|)"]
r_squared[i] <- summary_lm$r.squared
adj_r_squared[i] <- summary_lm$adj.r.squared
tau_mk_test_2[i] <- mk_test_2$tau
p_value_mk_test_2[i] <- mk_test_2$sl
}
# Verificar que la lista tiene el número esperado de data frames
print(paste("Número de data frames en datalist:", length(datalist)))
# Cargar todos los archivos en una lista
datalist <- lapply(file_paths, read.delim, sep = ",", dec = ".")
# Verificar que la lista tiene el número esperado de data frames
print(paste("Número de data frames en datalist:", length(datalist)))
# Verificar cuántos archivos se han encontrado
print(paste("Número de archivos encontrados:", length(file_paths)))
# Leer los archivos en una lista de data frames
file_paths <- list.files("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/",
pattern = "lswi_zone.*\\.csv$", full.names = TRUE)
# Verificar cuántos archivos se han encontrado
print(paste("Número de archivos encontrados:", length(file_paths)))
# Cargar todos los archivos en una lista
datalist <- lapply(file_paths, read.delim, sep = ",", dec = ".")
# Verificar que la lista tiene el número esperado de data frames
print(paste("Número de data frames en datalist:", length(datalist)))
# Listar todos los archivos CSV en el directorio
file_paths <- list.files("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/",
pattern = "\\.csv$", full.names = TRUE)
print(file_paths)
# Verificar cuántos archivos se han encontrado
print(paste("Número de archivos encontrados:", length(file_paths)))
?list.files
# Listar todos los archivos CSV en el directorio
file_paths <- list.files("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/",
pattern = "\\.csv", full.names = TRUE)
print(file_paths)
datalist<-list(data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone01b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone02b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone03b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone04b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone05b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone06b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone07b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone08b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone09b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone10b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone11b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone12b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone13b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone14b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone15b.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone01.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone02.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone03.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone04.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone05.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone06.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone07.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone08.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone09.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone10.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone11.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone12.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone13.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone14.csv", sep=",", dec = "."),
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone15.csv", sep=",", dec = "."))
for (i in 1:30) {
datalist[i]
nt_test <- notrend_test(datalist$LSWI)
mk_test <- notrend_test(datalist$LSWI, test='MK')
lm_model <- lm(data$LSWI ~ datalist$Year)
summary_lm <- summary(lm_model)
mk_test_2 <- MannKendall(datalist$LSWI)
intercept_lm[i] <- summary_lm$coefficients[1, "Estimate"]
slope_lm[i] <- summary_lm$coefficients[2, "Estimate"]
p_value_slope[i] <- summary_lm$coefficients[2, "Pr(>|t|)"]
r_squared[i] <- summary_lm$r.squared
adj_r_squared[i] <- summary_lm$adj.r.squared
tau_mk_test_2[i] <- mk_test_2$tau
p_value_mk_test_2[i] <- mk_test_2$sl
}
for (i in 1:30) {
datalist[i]
nt_test <- notrend_test(datalist[i]$LSWI)
mk_test <- notrend_test(datalist[i]$LSWI, test='MK')
lm_model <- lm(data$LSWI ~ datalist[i]$Year)
summary_lm <- summary(lm_model)
mk_test_2 <- MannKendall(datalist[i]$LSWI)
intercept_lm[i] <- summary_lm$coefficients[1, "Estimate"]
slope_lm[i] <- summary_lm$coefficients[2, "Estimate"]
p_value_slope[i] <- summary_lm$coefficients[2, "Pr(>|t|)"]
r_squared[i] <- summary_lm$r.squared
adj_r_squared[i] <- summary_lm$adj.r.squared
tau_mk_test_2[i] <- mk_test_2$tau
p_value_mk_test_2[i] <- mk_test_2$sl
}
for (i in 1:30) {
data<-datalist[i]
nt_test <- notrend_test(datos$LSWI)
mk_test <- notrend_test(datos$LSWI, test='MK')
lm_model <- lm(data$LSWI ~ datos$Year)
summary_lm <- summary(lm_model)
mk_test_2 <- MannKendall(datos$LSWI)
intercept_lm[i] <- summary_lm$coefficients[1, "Estimate"]
slope_lm[i] <- summary_lm$coefficients[2, "Estimate"]
p_value_slope[i] <- summary_lm$coefficients[2, "Pr(>|t|)"]
r_squared[i] <- summary_lm$r.squared
adj_r_squared[i] <- summary_lm$adj.r.squared
tau_mk_test_2[i] <- mk_test_2$tau
p_value_mk_test_2[i] <- mk_test_2$sl
}
# Intentar listar todos los archivos CSV en el directorio
file_paths <- list.files("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/",
pattern = "\\.csv$", full.names = TRUE)
# Mostrar los archivos encontrados
print(paste("Archivos encontrados:", file_paths))
# Si se encontraron archivos, proceder a leerlos
if (length(file_paths) > 0) {
datalist <- lapply(file_paths, read.delim, sep = ",", dec = ".")
print(paste("Número de data frames en datalist:", length(datalist)))
# Ahora continúa con tu bucle para realizar los análisis...
} else {
print("No se encontraron archivos CSV en la ruta especificada.")
}
datalist<-list(read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone01b.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone02b.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone03b.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone04b.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone05b.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone06b.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone07b.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone08b.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone09b.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone10b.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone11b.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone12b.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone13b.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone14b.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone15b.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone01.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone02.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone03.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone04.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone05.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone06.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone07.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone08.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone09.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone10.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone11.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone12.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone13.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone14.csv", sep=",", dec = "."),
read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_humedal/lswi_zone15.csv", sep=",", dec = "."))
for (i in 1:30) {
data<-datalist[i]
nt_test <- notrend_test(datos$LSWI)
mk_test <- notrend_test(datos$LSWI, test='MK')
lm_model <- lm(data$LSWI ~ datos$Year)
summary_lm <- summary(lm_model)
mk_test_2 <- MannKendall(datos$LSWI)
intercept_lm[i] <- summary_lm$coefficients[1, "Estimate"]
slope_lm[i] <- summary_lm$coefficients[2, "Estimate"]
p_value_slope[i] <- summary_lm$coefficients[2, "Pr(>|t|)"]
r_squared[i] <- summary_lm$r.squared
adj_r_squared[i] <- summary_lm$adj.r.squared
tau_mk_test_2[i] <- mk_test_2$tau
p_value_mk_test_2[i] <- mk_test_2$sl
}
for (i in 1:30) {
data<-datalist[i]
nt_test <- notrend_test(data$LSWI)
mk_test <- notrend_test(data$LSWI, test='MK')
lm_model <- lm(data$LSWI ~ data$Year)
summary_lm <- summary(lm_model)
mk_test_2 <- MannKendall(data$LSWI)
intercept_lm[i] <- summary_lm$coefficients[1, "Estimate"]
slope_lm[i] <- summary_lm$coefficients[2, "Estimate"]
p_value_slope[i] <- summary_lm$coefficients[2, "Pr(>|t|)"]
r_squared[i] <- summary_lm$r.squared
adj_r_squared[i] <- summary_lm$adj.r.squared
tau_mk_test_2[i] <- mk_test_2$tau
p_value_mk_test_2[i] <- mk_test_2$sl
}
for (i in 1:30) {
data<-datalist[i]
data
nt_test <- notrend_test(data$LSWI)
mk_test <- notrend_test(data$LSWI, test='MK')
lm_model <- lm(data$LSWI ~ data$Year)
summary_lm <- summary(lm_model)
mk_test_2 <- MannKendall(data$LSWI)
intercept_lm[i] <- summary_lm$coefficients[1, "Estimate"]
slope_lm[i] <- summary_lm$coefficients[2, "Estimate"]
p_value_slope[i] <- summary_lm$coefficients[2, "Pr(>|t|)"]
r_squared[i] <- summary_lm$r.squared
adj_r_squared[i] <- summary_lm$adj.r.squared
tau_mk_test_2[i] <- mk_test_2$tau
p_value_mk_test_2[i] <- mk_test_2$sl
}
# Inicializar las variables que almacenarán los resultados
n <- 30  # Número de archivos que esperas procesar
for (i in 1:length(datalist)) {
data <- datalist[[i]]
# Asegurarte de que LSWI es numérico y un vector
data$LSWI <- as.numeric(as.character(data$LSWI))
if (any(is.na(data$LSWI))) {
data <- na.omit(data)
}
# Realizar los análisis
if (is.vector(data$LSWI) && !is.matrix(data$LSWI)) {
nt_test <- notrend_test(data$LSWI)
mk_test <- notrend_test(data$LSWI, test='MK')
lm_model <- lm(LSWI ~ Year, data = data)
summary_lm <- summary(lm_model)
mk_test_2 <- MannKendall(data$LSWI)
intercept_lm[i] <- summary_lm$coefficients[1, "Estimate"]
slope_lm[i] <- summary
a
a
?
)
)
for (i in 1:length(datalist)) {
data <- datalist[[i]]
# Asegurarte de que LSWI es numérico y un vector
data$LSWI <- as.numeric(as.character(data$LSWI))
if (any(is.na(data$LSWI))) {
data <- na.omit(data)
}
# Realizar los análisis
if (is.vector(data$LSWI) && !is.matrix(data$LSWI)) {
nt_test <- notrend_test(data$LSWI)
mk_test <- notrend_test(data$LSWI, test='MK')
lm_model <- lm(LSWI ~ Year, data = data)
summary_lm <- summary(lm_model)
mk_test_2 <- MannKendall(data$LSWI)
intercept_lm[i] <- summary_lm$coefficients[1, "Estimate"]
slope_lm[i] <- summary_lm$coefficients[2, "Estimate"]
p_value_slope[i] <- summary_lm$coefficients[2, "Pr(>|t|)"]
r_squared[i] <- summary_lm$r.squared
adj_r_squared[i] <- summary_lm$adj.r.squared
tau_mk_test_2[i] <- mk_test_2$tau
p_value_mk_test_2[i] <- mk_test_2$sl
} else {
print(paste("Error en la iteración", i, ": LSWI no es un vector univariado."))
}
}
# Verificar los resultados
results_df <- data.frame(
intercept_lm,
slope_lm,
p_value_slope,
r_squared,
adj_r_squared,
tau_mk_test_2,
p_value_mk_test_2
)
print(results_df)
summary_lm
View(results_df)
?format
a<-6.278387e-01
format(a, nsmall = 3)
format(results_df, nsmall = 3)
format(results_df, nsmall = 5)
format(results_df, scientific = 4)
format(results_df, scientific = 3)
format(results_df, scientific = 10)
format(results_df, scientific = 6)
format(results_df, scientific = 4)
format(results_df, scientific = 5)
print(results_df)
format(results_df, scientific = 5)
results_dff<-format(results_df, scientific = 5)
results_dff
results_df <- format(results_df, scientific = 5)
print(results_df)
t(results_df)
View(t(results_df))
View(results_df)
c(paste(rep(zone),1:15,"b")))
c(paste(rep(zone),1:15,"b"))
c(paste(rep("zone",15),1:15,"b"))
?paste
c(paste(rep("zone",15),1:15,"b"), sep="")
c(paste(rep("zone",15),1:15,"b",sep = ""))
c(paste(rep("zone",15),sprintf("%02d", 15),"b",sep = ""))
c(paste(rep("zone",15),sprintf("%02d", 1:15),"b",sep = ""))
c(paste(rep("zone",15),sprintf("%02d", 1:15),"b",sep = ""))+c(1:5)
c(c(paste(rep("zone",15),sprintf("%02d", 1:15),"b",sep = "")),1:5)
c(c(paste(rep("zone",15),sprintf("%02d", 1:15),"b",sep = "")),c(paste(rep("zone",15),sprintf("%02d", 1:15),sep = "")))
?rownames
rownames(results_df)<-c(c(paste(rep("zone",15),sprintf("%02d", 1:15),"b",sep = "")),c(paste(rep("zone",15),sprintf("%02d", 1:15),sep = "")))
rownames(results_df)
View(results_df)
#Option A #library(funtimes)
notrend_test(data$LSWI)
# Data
data<-read.delim("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/zones_buffer/lswi_zone01b.csv", sep=",", dec = ".")
#Option A #library(funtimes)
notrend_test(data$LSWI)
notrend_test(data$LSWI,test='MK') # Usa esta función
#Option A #library(funtimes)
notrend_test(data$LSWI)
notrend_test(data$LSWI,test='MK') # Usa esta función
#notrend_test(data$LSWI,test='WAVK', factor.length = "adaptive.selection")
plot(data$Year,data$LSWI, type='l') # Pinta siempre los resultados
# apply LM to check
summary(lm(data$LSWI~data$Year))
colnames(results_df)
results_df[1,]
#Option B# Sólo quería probar otra forma pero da el mismo resultado #library(Kendall)
MannKendall(data$LSWI)
?write.table
write.table((results_df, file ="Mann-Kendall_lm_lswi_results.txt", append=TRUE, sep="\t", row.names = T, col.names=T)
write.table(results_df, file ="Mann-Kendall_lm_lswi_results.txt", append=TRUE, sep="\t", row.names = T, col.names=T)
getwd()
setwd("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/R")
write.table(results_df, file ="Mann-Kendall_lm_lswi_results.csv", append=TRUE, sep="\t", row.names = T, col.names=T)
write.table(results_df, file ="Mann-Kendall_lm_lswi_results.csv", append=TRUE, sep="\t", row.names = F, col.names=F)
write.table(results_df, file ="Mann-Kendall_lm_lswi_results.csv", append=TRUE, sep="\t", row.names = F, col.names=F)
