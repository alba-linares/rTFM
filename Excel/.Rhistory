mutate(SIGNIFICATIVO = ifelse(abs(CAMBIO_PORCENTUAL) > umbral, TRUE, FALSE))
# Definir el umbral de cambio, por ejemplo 5% (p-value>0.05¿?)
# Crear una nueva columna que indique si el cambio es mayor que el umbral
areas_dif_gen_x_hum_percent_usos_B <- areas_dif_gen_x_hum_percent_usos_B %>%
mutate(SIGNIFICATIVO = ifelse(abs(0.05) > umbral, TRUE, FALSE))
# Definir el umbral de cambio, por ejemplo 5% (p-value>0.05¿?)
# Crear una nueva columna que indique si el cambio es mayor que el umbral
areas_dif_gen_x_hum_percent_usos_B <- areas_dif_gen_x_hum_percent_usos_B %>%
mutate(SIGNIFICATIVO = ifelse(abs(5) > umbral, TRUE, FALSE))
areas_dif_gen_x_hum_percent_usos_B
# PRUEBA
modelo <- aov(HUMEDAL~., data=areas_dif_gen_x_hum_percent_usos_B) # Analisis de la varianza con funcion aov
summary(modelo)
?pivot_longer
areas_mucva_gen_x_hum_percent
relig_income
areas_dif_gen_x_hum_percent_usos_B %>%
pivot_longer(!HUMEDAL,names_to = "USOS", values_to = "PORCENTAJE"))
areas_dif_gen_x_hum_percent_usos_B %>%
pivot_longer(!HUMEDAL,names_to = "USOS", values_to = "PORCENTAJE")
dif_percent_B <- areas_dif_gen_x_hum_percent_usos_B %>%
pivot_longer(!HUMEDAL,names_to = "USOS", values_to = "PORCENTAJE")
# PRUEBA
modelo <- aov(PORCENTAJE~USOS*HUMEDAL, data=dif_percent_B) # Analisis de la varianza con funcion aov
summary(modelo)
Anova(modelo)
TukeyHSD(modelo)
summary(modelo)
Anova(modelo)
dif_B <- areas_dif_gen_x_hum_usos_B %>%
pivot_longer(!HUMEDAL,names_to = "USOS", values_to = "PORCENTAJE")
dif_B <- areas_dif_gen_x_hum_B_usos %>%
pivot_longer(!HUMEDAL,names_to = "USOS", values_to = "PORCENTAJE")
# Voy a recalcular areas_dif
M <- matrix (data=NA, 12, 6)
M<-as.data.frame(M)
for (i in 1:nrow(areas_siose_gen_x_hum_B_usos)) {
for (j in 1:ncol(areas_siose_gen_x_hum_B_usos)) {
M[i, j] <- areas_siose_gen_x_hum_B_usos[i, j] - areas_mucva_gen_x_hum_B_usos[i, j]
}
}
M[, 1] <- areas_siose_gen_x_hum_B_usos[, 1]
colnames(M)<-colnames(areas_siose_gen_x_hum_B_usos)
# Áreas por usos 1984-2020 (SIOSE, MUCVA) GENERALES (EN BUFFER) #####################################################
areas_mucva_general_B<-as.data.frame(tapply(datos_mucva$AREA_USOS_BUFFER, INDEX=datos_mucva$USOS_GENERAL, FUN=sum))
colnames(areas_mucva_general_B)<-"areas"
areas_mucva_general_B
areas_siose_general_B<-as.data.frame(tapply(datos_siose$AREA_USOS_BUFFER, INDEX=datos_siose$USOS_GENERAL, FUN=sum))
colnames(areas_siose_general_B)<-"areas"
areas_siose_general_B
areas_dif_general_B<-as.data.frame(tapply(datos_dif$AREA_USOS_BUFFER, INDEX=datos_dif$USOS_GENERAL, FUN=sum))
colnames(areas_dif_general_B)<-"areas"
areas_dif_general_B
#Y POR CADA HUMEDAL (EN BUFFER)
areas_mucva_gen_x_hum_B <- datos_mucva %>%
group_by(HUMEDAL, USOS_GENERAL) %>%  # Agrupa por humedal y uso general
summarise(SUMA_AREAS = sum(AREA_USOS_BUFFER, na.rm = TRUE))  # Sumar las áreas por grupo
areas_mucva_gen_x_hum_B_usos <- pivot_wider(areas_mucva_gen_x_hum_B,names_from = USOS_GENERAL, values_from = SUMA_AREAS)
areas_siose_gen_x_hum_B <- datos_siose %>%
group_by(HUMEDAL, USOS_GENERAL) %>%  # Agrupa por humedal y uso general
summarise(SUMA_AREAS = sum(AREA_USOS_BUFFER, na.rm = TRUE))  # Sumar las áreas por grupo
areas_siose_gen_x_hum_B_usos <- pivot_wider(areas_siose_gen_x_hum_B,names_from = USOS_GENERAL, values_from = SUMA_AREAS)
areas_dif_gen_x_hum_B <- datos_dif %>%
group_by(HUMEDAL, USOS_GENERAL) %>%  # Agrupa por humedal y uso general
summarise(SUMA_AREAS = sum(AREA_USOS_BUFFER, na.rm = TRUE))  # Sumar las áreas por grupo
areas_dif_gen_x_hum_B_usos <- pivot_wider(areas_dif_gen_x_hum_B,names_from = USOS_GENERAL, values_from = SUMA_AREAS)
# Voy a recalcular areas_dif
M <- matrix (data=NA, 12, 6)
M<-as.data.frame(M)
for (i in 1:nrow(areas_siose_gen_x_hum_B_usos)) {
for (j in 1:ncol(areas_siose_gen_x_hum_B_usos)) {
M[i, j] <- areas_siose_gen_x_hum_B_usos[i, j] - areas_mucva_gen_x_hum_B_usos[i, j]
}
}
M[, 1] <- areas_siose_gen_x_hum_B_usos[, 1]
colnames(M)<-colnames(areas_siose_gen_x_hum_B_usos)
areas_dif_gen_x_hum_usos_B <- M
dif_B <- areas_dif_gen_x_hum_usos_B %>%
pivot_longer(!HUMEDAL,names_to = "USOS", values_to = "PORCENTAJE")
dif_B
# PRUEBA
modelo <- aov(PORCENTAJE~USOS*HUMEDAL, data=dif_percent_B) # Analisis de la varianza con funcion aov
summary(modelo)
Anova(modelo)
TukeyHSD(modelo)
dif_B <- areas_dif_gen_x_hum_usos_B %>%
pivot_longer(!HUMEDAL,names_to = "USOS", values_to = "PORCENTAJE")
mucva_B <- areas_mucva_gen_x_hum_usos_B %>%
pivot_longer(!HUMEDAL,names_to = "USOS", values_to = "PORCENTAJE")
siose_B <- areas_siose_gen_x_hum_usos_B %>%
pivot_longer(!HUMEDAL,names_to = "USOS", values_to = "PORCENTAJE")
mucva_B <- areas_mucva_gen_x_hum_B_usos %>%
pivot_longer(!HUMEDAL,names_to = "USOS", values_to = "PORCENTAJE")
siose_B <- areas_siose_gen_x_hum_B_usos %>%
pivot_longer(!HUMEDAL,names_to = "USOS", values_to = "PORCENTAJE")
dif_B <- areas_dif_gen_x_hum_usos_B %>%
pivot_longer(!HUMEDAL,names_to = "USOS", values_to = "PORCENTAJE")
mucva_B <- areas_mucva_gen_x_hum_percent_usos_B %>%
pivot_longer(!HUMEDAL,names_to = "USOS", values_to = "PORCENTAJE")
siose_B <- areas_mucva_gen_x_hum_percent_usos_B %>%
pivot_longer(!HUMEDAL,names_to = "USOS", values_to = "PORCENTAJE")
siose_B
dataset_percent<- merge(x = mucva_B, y = siose_B[ , c("code", "y.binom")], by = c("HUMEDAL", "USOS"))
dataset_percent<- merge(x = mucva_B, y = siose_B[ , !c("HUMEDAL", "USOS")], by = c("HUMEDAL", "USOS"))
dataset_percent<- merge(x = mucva_B, y = siose_B, by = c("HUMEDAL", "USOS"))
dataset_percent
siose_B <- areas_siose_gen_x_hum_percent_usos_B %>%
pivot_longer(!HUMEDAL,names_to = "USOS", values_to = "PORCENTAJE")
dataset_percent<- merge(x = mucva_B, y = siose_B, by = c("HUMEDAL", "USOS"))
dataset_percent
mucva_B
dataset_percent[,4]
dataset_percent[,c(3,4)]
colnames(dataset_percent[,c(3,4)])<- c("MUCVA_percent","SIOSE_percent")
dataset_percent
colnames(dataset_percent[,4)])<- "SIOSE_percent"
colnames(dataset_percent[,4])<- "SIOSE_percent"
colnames(dataset_percent[4])<- "SIOSE_percent"
dataset_percent
?colnames
colnames(dataset_percent)[4]<- "SIOSE_percent"
colnames(dataset_percent)
colnames(dataset_percent)[3]<- "MUCVA_percent"
colnames(dataset_percent)
# PRUEBA
modelo <- aov(MUCVA_percent~SIOSE_percent+USOS*HUMEDAL, data=dataset_percent) # Analisis de la varianza con funcion aov
summary(modelo)
Anova(modelo)
# PRUEBA
modelo <- aov(MUCVA_percent~SIOSE_percent, data=dataset_percent) # Analisis de la varianza con funcion aov
summary(modelo)
Anova(modelo)
TukeyHSD(modelo)
# PRUEBA
modelo <- aov(MUCVA_percent~SIOSE_percent+USOS+HUMEDAL, data=dataset_percent) # Analisis de la varianza con funcion aov
summary(modelo)
Anova(modelo)
# Cargar las librerías
library(readxl)
library(car) #Anova()
library(multcomp) # Tukey
# Leer los archivos
setwd("D:/Escritorio/TFM/rTFM")
datos <-read_excel("Excel/puntos_hic_zonas_naturales.xlsx", sheet = 1)
# Categorizar como factor
datos[2:9] <- lapply(datos[2:9], as.factor)
# Leer los archivos
setwd("D:/Escritorio/MASTER/TFM/rTFM")
datos <-read_excel("Excel/puntos_hic_zonas_naturales.xlsx", sheet = 1)
# Categorizar como factor
datos[2:9] <- lapply(datos[2:9], as.factor)
datos$CODIGO_UE2 <- lapply(datos$CODIGO_UE2, as.factor)
datos$CODIGO_UE3 <- lapply(datos$CODIGO_UE3, as.factor)
datos$CODIGO_UE4 <- lapply(datos$CODIGO_UE4, as.factor)
datos[18:33] <- lapply(datos[18:33], as.factor)
datos$PRESENCIA_ZONA_NAT<- lapply(datos$PRESENCIA_ZONA_NAT, as.factor)
datos$MUCVA_ZONAS_NAT_T_ESPECIFICAS<- lapply(datos$MUCVA_ZONAS_NAT_T_ESPECIFICAS, as.factor)
# Deshacer lista
datos$CODIGO_UE2<-unlist(datos$CODIGO_UE2)
datos$CODIGO_UE3<-unlist(datos$CODIGO_UE3)
datos$CODIGO_UE4<-unlist(datos$CODIGO_UE4)
datos$PRESENCIA_ZONA_NAT<-unlist(datos$PRESENCIA_ZONA_NAT)
datos$MUCVA_ZONAS_NAT_T_ESPECIFICAS<-unlist(datos$MUCVA_ZONAS_NAT_T_ESPECIFICAS)
# Modelo lineal generalizado binomial ##########################################
#¿Que esté protegido y su localización con respecto a la costa repercuten en si hay HIC en 2020 o no?
modelo_glm <- glm(PRESENCIA_HIC~ENP+GRUPO_TIPO, family = binomial, data=datos)
Anova(modelo_glm)
summary(modelo_glm) #ENP pendiente negativa
# Sale diferencia significativa (***) en función de ENP
table(datos$PRESENCIA_HIC,datos$FIGURA) #¿Hay una diferencia significativa en la que los puntos no protegidos tienen una mayor presencia de HIC?
#¿El tipo de propiedad, el humedal o si hay zona natural en 1984 y el tipo de uso del suelo repercuten en si hay HIC en 2020 o no?
#...SIN INTERACCIÓN:
modelo_glm2 <- glm(PRESENCIA_HIC ~ PROPIEDAD+MUCVA_ZONAS_NAT_T_ESPECIFICAS+NOMBRE_HUM+PRESENCIA_ZONA_NAT, family = binomial, data = datos)
Anova(modelo_glm2)
#¿Esto quiere decir que hay diferencias significativas en la zona buffer en cuanto a la presencia de HIC, como se puede ver aquí:
table(datos$PRESENCIA_HIC, datos$ZONA)
df_area_usos84 <-read_excel("Resultados_puntos_analisis.xlsx", sheet = 2)
df_area_usos20 <-read_excel("Resultados_puntos_analisis.xlsx", sheet = 3)
setwd("D:/Escritorio/TFM/rTFM/Excel")
setwd("D:/Escritorio/MASTER/TFM/rTFM/Excel")
datos <-read_excel("Resultados_puntos_analisis.xlsx", range = "A1:O2081")
head(datos)
df_area_usos84 <-read_excel("Resultados_puntos_analisis.xlsx", sheet = 2)
df_area_usos20 <-read_excel("Resultados_puntos_analisis.xlsx", sheet = 3)
################################################################################
# Matriz de doble entrada con los cambios
# Crear una tabla de contingencia para los cambios de uso del suelo
matriz_cambios_general <- table(datos$MUCVA1984_GENERAL, datos$SIOSE2020_GENERAL)
matriz_cambios <- table(datos$MUCVA1984, datos$SIOSE2020)
# Ver la matriz
print(matriz_cambios)
library(ggplot2)
# Convertir la matriz de cambios a un data frame para usar ggplot
df_matriz <- as.data.frame(as.table(matriz_cambios))
# Crear el gráfico de calor con números
ggplot(df_matriz, aes(Var1, Var2, fill = Freq)) +
geom_tile(color = "white") +  # Color blanco para separar las celdas
geom_text(aes(label = Freq), color = "black", size = 4) +  # Colocar los números sobre las celdas
scale_fill_gradient(low = "white", high = "cyan4") +  # Gradiente de color
labs(x = "Uso del Suelo en 1984", y = "Uso del Suelo en 2020", fill = "Frecuencia") +
theme_minimal()
#OTRO MÉTODO: TABLA DE CONTINGENCIA (https://r-coder.com/tabla-contingencia-r/)
tabla <- prop.table(matriz_cambios, margin = 1)
tabla_2 <- prop.table(tabla, margin = 2)
tabla_2
tabla_prop <- prop.table(tabla)
tabla_prop
tabla_3 <- addmargins(tabla_prop * 100)
tabla_3
df_area_usos84 <-read_excel("Resultados_puntos_analisis.xlsx", sheet = 2)
df_area_usos20 <-read_excel("Resultados_puntos_analisis.xlsx", sheet = 3)
################################################################################
# Matriz de doble entrada con los cambios
# Crear una tabla de contingencia para los cambios de uso del suelo
matriz_cambios_general <- table(datos$MUCVA1984_GENERAL, datos$SIOSE2020_GENERAL)
matriz_cambios <- table(datos$MUCVA1984, datos$SIOSE2020)
# Ver la matriz
print(matriz_cambios)
library(ggplot2)
# Convertir la matriz de cambios a un data frame para usar ggplot
df_matriz <- as.data.frame(as.table(matriz_cambios))
# Crear el gráfico de calor con números
ggplot(df_matriz, aes(Var1, Var2, fill = Freq)) +
geom_tile(color = "white") +  # Color blanco para separar las celdas
geom_text(aes(label = Freq), color = "black", size = 4) +  # Colocar los números sobre las celdas
scale_fill_gradient(low = "white", high = "cyan4") +  # Gradiente de color
labs(x = "Uso del Suelo en 1984", y = "Uso del Suelo en 2020", fill = "Frecuencia") +
theme_minimal()
#OTRO MÉTODO: TABLA DE CONTINGENCIA (https://r-coder.com/tabla-contingencia-r/)
tabla <- prop.table(matriz_cambios, margin = 1)
tabla_2 <- prop.table(tabla, margin = 2)
tabla_2
tabla_prop <- prop.table(tabla)
# Cargar las librerías
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
setwd("D:/Escritorio/MASTER/TFM/rTFM/Excel")
datos <-read_excel("Resultados_puntos_analisis.xlsx", range = "A1:O2081")
head(datos)
df_area_usos84 <-read_excel("Resultados_puntos_analisis.xlsx", sheet = 2)
df_area_usos20 <-read_excel("Resultados_puntos_analisis.xlsx", sheet = 3)
################################################################################
# Análisis exploratorio de los datos: gráficas #################################
pie(table(datos$COMPARACION))
pie(table(datos$MUCVA__USO)) #Usos 1984
pie(table(datos$SIOSE__USO)) #Usos 2023
pie(table(datos$MUCVA_USO)) #Usos 1984
################################################################################
# Análisis exploratorio de los datos: gráficas #################################
pie(table(datos$COMPARACION))
pie(table(datos$MUCVA1984)) #Usos 1984
pie(table(datos$SIOSE2020)) #Usos 2023
# Gráfico de barras apiladas
ggplot(datos, aes(x = datos$MUCVA1984, fill = COMPARACION)) +
geom_bar(position = "fill") +
labs(title = "Comparación de Usos del Suelo entre 1984 y 2023", x = "Uso del Suelo en 1984", y = "Proporción") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=0))
# Contar las frecuencias de cada clase de uso del suelo por humedal
tabla_frecuencia <- table(datos$NOMBRE_HUM, datos$MUCVA1984)
# Contar la frecuencia de cada clase por humedal
frecuencia_clase_humedal <- datos %>%
group_by(NOMBRE_HUM, MUCVA1984) %>%
count()
# Ver los resultados
View(frecuencia_clase_humedal)
# Ver los resultados
head(frecuencia_clase_humedal)
# Ver los resultados
View(frecuencia_clase_humedal)
################################################################################
# Gráfico de barras apiladas para mostrar la proporción de cada uso del suelo por humedal RELATIVO
ggplot(datos, aes(x = MUCVA1984, fill = NOMBRE_HUM)) +
geom_bar(position = "fill") +
labs(title = "Proporción de usos del suelo en 1984 por humedal",
x = "Uso del suelo",
y = "Proporción") +
scale_fill_viridis_d(option = "H") + #B o H están bien, se distinguen los humedales
theme_minimal() +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust = 0))
ggplot(datos, aes(x = SIOSE2020, fill = NOMBRE_HUM)) +
geom_bar(position = "fill") +
labs(title = "Proporción de usos del suelo en la actualidad por humedal",
x = "Uso del suelo",
y = "Proporción") +
scale_fill_viridis_d(option = "H") + #B o H están bien, se distinguen los humedales
theme_minimal() +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=0))
# ABSOLUTO #####################################################################
ggplot(datos, aes(x = MUCVA1984, fill = NOMBRE_HUM)) +
geom_bar(position = "stack") +  # Cambia "fill" por "stack" para contar valores absolutos
labs(title = "Número de hectáreas por uso del suelo en 1984 por humedal",
x = "Uso del suelo",
y = "Hectáreas") +
scale_fill_viridis_d(option = "H") + #B o H están bien, se distinguen los humedales
ylim(0, 800) +  # Establece el límite del eje y entre 0 y 800
theme_minimal() +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust = 0))
ggplot(datos, aes(x = SIOSE2020, fill = NOMBRE_HUM)) +
geom_bar(position = "stack") +  # Cambia "fill" por "stack" para contar valores absolutos
labs(title = "Número de hectáreas por uso del suelo en la actualidad por humedal",
x = "Uso del suelo",
y = "Hectáreas") +
scale_fill_viridis_d(option = "H") + #B o H están bien, se distinguen los humedales
ylim(0, 800) +  # Establece el límite del eje y entre 0 y 800
theme_minimal() +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=0))
result_area84 <- df_area_usos84 %>%
group_by(df_area_usos84$`_USOS_DEFI`) %>%
summarise(Total_Area = sum(AREA_POLIG))
result_area20 <- df_area_usos20 %>%
group_by(`_USOS_DEFI`) %>%
summarise(Total_Area = sum(AREA_POLIG))
################################################################################
################################################################################
# Agrupar por ZONA (BUFFER VS HUMEDAL) y COMPARACION (IGUAL VS DISTINTO), y contar las ocurrencias
comparacion_resumen <- datos %>%
group_by(ZONA, COMPARACION) %>%
summarize(count = n()) %>%
ungroup()
print(comparacion_resumen)
# Calcular proporciones
comparacion_proporciones <- comparacion_resumen %>%
group_by(ZONA) %>%
mutate(proporcion = count / sum(count))
print(comparacion_proporciones)
# Gráfico de barras apiladas
ggplot(comparacion_proporciones, aes(x = ZONA, y = proporcion, fill = COMPARACION)) +
geom_bar(stat = "identity") +
labs(title = "Comparación de Cambios de Uso del Suelo Dentro y Fuera de Humedales",
x = "Zona (Dentro/Fuera del Humedal)", y = "Proporción") +
scale_y_continuous(labels = scales::percent_format()) +
theme_minimal()
################################################################################
# Para evaluar los cambios específicos de uso del suelo ########################
# Crear una columna que muestre el cambio de uso del suelo
data <- datos %>%
mutate(cambio_uso = paste(MUCVA1984, "a", SIOSE2020))
# Ver los primeros registros para confirmar
head(data)
# Agrupar por zona y tipo de cambio de uso del suelo, y contar las ocurrencias
cambio_uso_buf_hum <- data %>%
group_by(ZONA, cambio_uso) %>%
summarize(count = n()) %>%
ungroup()
# Ver los resultados
print(cambio_uso_buf_hum)
# Gráfico de barras apiladas por tipo de cambio
ggplot(cambio_uso_buf_hum, aes(x = ZONA, y = count, fill = cambio_uso)) +
geom_bar(stat = "identity") +
labs(title = "Cambios de Uso del Suelo Dentro y Fuera de Humedales",
x = "Zona (Dentro/Fuera del Humedal)", y = "Número de Cambios") +
theme_minimal()
# Gráfico de barras agrupadas
ggplot(cambio_uso_buf_hum, aes(x = cambio_uso, y = count, fill = ZONA)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Cambios Específicos de Uso del Suelo por Zona",
x = "Cambio de Uso del Suelo", y = "Número de Cambios") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Resumen descriptivo
cambio_uso_buf_hum %>%
arrange(desc(count))
# Crear tabla de contingencia
tabla_contingencia_bh <- table(data$ZONA, data$cambio_uso)
# Realizar prueba de Chi-cuadrado
chi_test <- chisq.test(tabla_contingencia_bh)
print(chi_test)
# Transformar la tabla de formato largo a formato ancho
tabla_ancha <- as.data.frame(tabla_contingencia_bh) %>%
pivot_wider(names_from = Var1, values_from = Freq)
# Ver el resultado
print(tabla_ancha)
# Gráfico de barras horizontales ###############################################
ggplot(cambio_uso_buf_hum, aes(x = count, y = reorder(cambio_uso, count))) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Cambios de Uso del Suelo",
x = "Número de Cambios", y = "Cambio de Uso del Suelo") +
theme_minimal()
# Filtrar para mostrar solo las 10 categorías más comunes
top_cambios <- cambio_uso_buf_hum %>%
top_n(10, count)
# Gráfico de barras horizontales con las 10 categorías más comunes
ggplot(top_cambios, aes(x = count, y = reorder(cambio_uso, count))) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Top 10 Cambios de Uso del Suelo",
x = "Número de Cambios", y = "Cambio de Uso del Suelo") +
theme_minimal()
# Definir un umbral para agrupar categorías menos frecuentes
umbral <- 5
# Crear una nueva categoría "Otros" para cambios poco frecuentes
cambio_uso_buf_hum_simplificado <- cambio_uso_buf_hum %>%
mutate(cambio_uso = ifelse(count < umbral, "Otros", cambio_uso)) %>%
group_by(cambio_uso) %>%
summarize(count = sum(count)) %>%
ungroup() %>%
arrange(count)
# Gráfico de barras horizontales con categorías simplificadas
ggplot(cambio_uso_buf_hum_simplificado, aes(x = count, y = reorder(cambio_uso, count))) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Cambios de Uso del Suelo (Agrupados)",
x = "Número de Cambios", y = "Cambio de Uso del Suelo") +
theme_minimal()
# SOLO CAMBIOS (COMPARACION = DISTINTO) ########################################
# Filtrar los datos para obtener solo los cambios distintos ####################
data_distintos <- data %>%
filter(COMPARACION == "DISTINTO")
# Crear una columna que muestre el cambio de uso del suelo
data_distintos <- data_distintos %>%
mutate(cambio_uso = paste(MUCVA1984, "a", SIOSE2020))
# Agrupar por tipo de cambio de uso del suelo y contar las ocurrencias
cambio_uso_buf_hum <- data_distintos %>%
group_by(cambio_uso) %>%
summarize(count = n()) %>%
ungroup()
# Ver los resultados
print(cambio_uso_buf_hum)
# Gráfico de barras horizontales para cambios distintos
ggplot(cambio_uso_buf_hum, aes(x = count, y = reorder(cambio_uso, count))) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Cambios de Uso del Suelo (DISTINTO)",
x = "Número de Cambios", y = "Cambio de Uso del Suelo") +
theme_minimal()
# Mostrar solo las 10 categorías más comunes
top_cambios <- cambio_uso_buf_hum %>%
top_n(10, count)
# Gráfico de barras horizontales con las 10 categorías más comunes
ggplot(top_cambios, aes(x = count, y = reorder(cambio_uso, count))) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Top 10 Cambios de Uso del Suelo (DISTINTO)",
x = "Número de Cambios", y = "Cambio de Uso del Suelo") +
theme_minimal()
# Definir un umbral para agrupar categorías menos frecuentes
umbral <- 5
# Crear una nueva categoría "Otros" para cambios poco frecuentes
cambio_uso_buf_hum_simplificado <- cambio_uso_buf_hum %>%
mutate(cambio_uso = ifelse(count < umbral, "Otros", cambio_uso)) %>%
group_by(cambio_uso) %>%
summarize(count = sum(count)) %>%
ungroup() %>%
arrange(count)
# Gráfico de barras horizontales con categorías simplificadas
ggplot(cambio_uso_buf_hum_simplificado, aes(x = count, y = reorder(cambio_uso, count))) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Cambios de Uso del Suelo (DISTINTO, Agrupados)",
x = "Número de Cambios", y = "Cambio de Uso del Suelo") +
theme_minimal()
################################################################################
# Crear una columna que muestre el cambio de uso del suelo
data <- datos %>%
mutate(cambio_uso = paste(MUCVA1984, "a", SIOSE2020))
cambio_uso_cost_int <- data %>%
group_by(GRUPO_TIPO, cambio_uso) %>%
summarize(count = n()) %>%
ungroup()
# Ver los resultados
print(cambio_uso_cost_int)
# Crear tabla de contingencia
tabla_contingencia_ci <- table(data$GRUPO_TIPO, data$cambio_uso)
# Transformar la tabla de formato largo a formato ancho
tabla_ancha_ci <- as.data.frame(tabla_contingencia_ci) %>%
pivot_wider(names_from = Var1, values_from = Freq)
# Ver el resultado
View(tabla_ancha_ci)
################################################################################
# Matriz de doble entrada con los cambios
# Crear una tabla de contingencia para los cambios de uso del suelo
matriz_cambios_general <- table(datos$MUCVA1984_GENERAL, datos$SIOSE2020_GENERAL)
matriz_cambios <- table(datos$MUCVA1984, datos$SIOSE2020)
matriz_cambios
unique(df_area_usos84$`_USOS_DEFI`)
unique(df_area_usos20$`_USOS_DEFI`)
library(dplyr)
df_area_usos84 <- df_area_usos84 %>%
mutate(
`_USOS_DEFI` = recode(`_USOS_DEFI`,
"Areas agricolas heterogeneas" = "Areas agrarias heterogeneas",
"Herbaceo secano" = "Cultivos herbaceos",
"Herbaceo regadio" = "Cultivos herbaceos"
)
)
rlang::last_trace()
df_area_usos84 <- df_area_usos84 %>%
mutate(
`_USOS_DEFI` = case_when(
`_USOS_DEFI` == "Areas agricolas heterogeneas" ~ "Areas agrarias heterogeneas",
`_USOS_DEFI` == "Herbaceo secano" ~ "Cultivos herbaceos",
`_USOS_DEFI` == "Herbaceo regadio" ~ "Cultivos herbaceos",
TRUE ~ `_USOS_DEFI`  # Mantiene el valor original si no coincide con ninguna de las condiciones
)
)
unique(df_area_usos84$`_USOS_DEFI`)
df_area_usos20 <- df_area_usos20 %>%
mutate(
`_USOS_DEFI` = case_when(
`_USOS_DEFI` == "Herbaceo secano" ~ "Cultivos herbaceos",
`_USOS_DEFI` == "Herbaceo regadio" ~ "Cultivos herbaceos",
TRUE ~ `_USOS_DEFI`
)
)
df_area_usos20
tabla_ancha_ci
################################################################################
################################################################################
# Agrupar por ZONA (BUFFER VS HUMEDAL) y COMPARACION (IGUAL VS DISTINTO), y contar las ocurrencias
comparacion_resumen <- datos %>%
group_by(ZONA, COMPARACION) %>%
summarize(count = n()) %>%
ungroup()
print(comparacion_resumen)
