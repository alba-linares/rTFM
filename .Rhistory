# Mostrar el gráfico
print(p)
p
# Cargar la librería necesaria
library(ggplot2)
# Crear el data frame con los datos proporcionados
data <- data.frame(
q = c(0, 0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2, 2.25, 2.5, 2.75, 3),
ChaoJost_Mean = c(53.966, 43.674, 35.961, 30.505, 26.726, 24.075, 22.149, 20.688, 19.533, 18.588, 17.793, 17.112, 16.522),
ChaoJost_Lower = c(14.872, 25.728, 28.548, 26.952, 24.107, 21.603, 19.662, 18.136, 16.895, 15.856, 14.971, 14.205, 13.541),
ChaoJost_Upper = c(93.060, 61.620, 43.374, 34.058, 29.345, 26.547, 24.636, 23.240, 22.171, 21.320, 20.615, 20.019, 19.503),
Empirical_Mean = c(42.000, 35.787, 30.984, 27.359, 24.632, 22.553, 20.931, 19.633, 18.567, 17.673, 16.910, 16.250, 15.673),
Empirical_Lower = c(38.013, 32.643, 28.367, 25.019, 22.402, 20.336, 18.677, 17.318, 16.180, 15.213, 14.382, 13.659, 13.029),
Empirical_Upper = c(45.987, 38.931, 33.601, 29.699, 26.862, 24.770, 23.185, 21.948, 20.954, 20.133, 19.438, 18.841, 18.317)
)
# Filtrar los elementos 1, 5 y 9
data_filtered <- data[c(1, 5, 9), ]
# Crear el gráfico
p <- ggplot(data_filtered, aes(x = factor(q))) +
geom_point(aes(y = ChaoJost_Mean), position = position_dodge(width = 0.5), color = "darkred", size = 3, shape = 16) +
geom_errorbar(aes(ymin = ChaoJost_Lower, ymax = ChaoJost_Upper), position = position_dodge(width = 0.5), width = 0.2, color = "darkred") +
geom_point(aes(y = Empirical_Mean), position = position_dodge(width = 0.5), color = "green", size = 3, shape = 22, fill = "white") +
geom_errorbar(aes(ymin = Empirical_Lower, ymax = Empirical_Upper, y = Empirical_Mean), position = position_dodge(width = 0.5), width = 0.2, color = "green") +
theme_minimal() +
labs(title = "Número efectivo de especies con Intervalos de Confianza",
x = "",
y = "Número efectivo de especies") +
scale_x_discrete(labels = c("q0", "q1", "q2")) +
theme(
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14)
)
# Mostrar el gráfico
print(p)
HillResultMAT
p
HillResultPIN
HillResultMAT
pinar <- data.frame(
q = c(0, 0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2, 2.25, 2.5, 2.75, 3),
ChaoJost_Mean = c(52.038, 41.771, 33.645, 27.656, 23.421, 20.453, 18.341, 16.798, 15.640, 14.750, 14.052, 13.498, 13.052),
ChaoJost_Lower = c(7.266, 15.252, 19.372, 19.824, 18.401, 16.564, 14.909, 13.554, 12.477, 11.622, 10.941, 10.397, 9.957),
ChaoJost_Upper = c(96.810, 68.290, 47.918, 35.488, 28.441, 24.342, 21.773, 20.042, 18.803, 17.878, 17.163, 16.599, 16.147),
Empirical_Mean = c(32.000, 28.198, 24.887, 22.095, 19.799, 17.943, 16.454, 15.263, 14.306, 13.531, 12.898, 12.376, 11.941),
Empirical_Lower = c(25.679, 22.910, 20.504, 18.410, 16.585, 15.007, 13.669, 12.558, 11.648, 10.907, 10.299, 9.801, 9.389),
Empirical_Upper = c(38.321, 33.486, 29.270, 25.780, 23.013, 20.879, 19.239, 17.968, 16.964, 16.155, 15.497, 14.951, 14.493)
)
matorral <- data.frame(
q = c(0, 0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2, 2.25, 2.5, 2.75, 3),
ChaoJost_Mean = c(53.966, 43.674, 35.961, 30.505, 26.726, 24.075, 22.149, 20.688, 19.533, 18.588, 17.793, 17.112, 16.522),
ChaoJost_Lower = c(14.872, 25.728, 28.548, 26.952, 24.107, 21.603, 19.662, 18.136, 16.895, 15.856, 14.971, 14.205, 13.541),
ChaoJost_Upper = c(93.060, 61.620, 43.374, 34.058, 29.345, 26.547, 24.636, 23.240, 22.171, 21.320, 20.615, 20.019, 19.503),
Empirical_Mean = c(42.000, 35.787, 30.984, 27.359, 24.632, 22.553, 20.931, 19.633, 18.567, 17.673, 16.910, 16.250, 15.673),
Empirical_Lower = c(38.013, 32.643, 28.367, 25.019, 22.402, 20.336, 18.677, 17.318, 16.180, 15.213, 14.382, 13.659, 13.029),
Empirical_Upper = c(45.987, 38.931, 33.601, 29.699, 26.862, 24.770, 23.185, 21.948, 20.954, 20.133, 19.438, 18.841, 18.317)
)
# Filtrar los elementos 1, 5 y 9
pinar_filtered <- pinar[c(1, 5, 9), ]
matorral_filtered <- matorral[c(1, 5, 9), ]
# Crear el gráfico
p <- ggplot() +
# Añadir los datos de Matorral (círculos)
geom_point(data = matorral_filtered, aes(x = factor(q), y = ChaoJost_Mean), position = position_dodge(width = 0.5), color = "darkred", size = 3, shape = 16) +
geom_errorbar(data = matorral_filtered, aes(x = factor(q), ymin = ChaoJost_Lower, ymax = ChaoJost_Upper), position = position_dodge(width = 0.5), width = 0.2, color = "darkred") +
geom_point(data = matorral_filtered, aes(x = factor(q), y = Empirical_Mean), position = position_dodge(width = 0.5), color = "darkred", size = 3, shape = 16, fill = "white") +
geom_errorbar(data = matorral_filtered, aes(x = factor(q), ymin = Empirical_Lower, ymax = Empirical_Upper, y = Empirical_Mean), position = position_dodge(width = 0.5), width = 0.2, color = "darkred") +
# Añadir los datos de Pinar (cuadrados)
geom_point(data = pinar_filtered, aes(x = factor(q), y = ChaoJost_Mean), position = position_dodge(width = 0.5), color = "green", size = 3, shape = 22) +
geom_errorbar(data = pinar_filtered, aes(x = factor(q), ymin = ChaoJost_Lower, ymax = ChaoJost_Upper), position = position_dodge(width = 0.5), width = 0.2, color = "green") +
geom_point(data = pinar_filtered, aes(x = factor(q), y = Empirical_Mean), position = position_dodge(width = 0.5), color = "green", size = 3, shape = 22, fill = "white") +
geom_errorbar(data = pinar_filtered, aes(x = factor(q), ymin = Empirical_Lower, ymax = Empirical_Upper, y = Empirical_Mean), position = position_dodge(width = 0.5), width = 0.2, color = "green") +
theme_minimal() +
labs(title = "Número efectivo de especies con Intervalos de Confianza",
x = "",
y = "Número efectivo de especies") +
scale_x_discrete(labels = c("q0", "q1", "q2")) +
theme(
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14)
)
# Mostrar el gráfico
p
HillResultMAT
HillResultPIN
HillResultMAT
HillResultMAT
library(readxl)
library(SpadeR)
#Importando los datos a R:
data <- read_excel("C:/Users/VE-UGR-0208/Desktop/DEI/Datos Trabajo 2023-24.xlsx")
HillResultMAT<-Diversity(data$MATORRAL,"abundance")
HillResultMAT
HillResultPIN<-Diversity(data$PINAR,"abundance")
HillResultPIN
library(readxl)
library(SpadeR)
#Importando los datos a R:
data <- read_excel("C:/Users/VE-UGR-0208/Desktop/DEI/Datos Trabajo 2023-24.xlsx")
#Importando los datos a R
data <- read_excel("C:/Users/VE-UGR-0208/Desktop/DEI/Datos Trabajo 2023-24_Alba.xlsx")
HillResultMAT<-Diversity(data$MATORRAL,"abundance")
HillResultMAT
HillResultPIN
HillResultPIN<-Diversity(data$PINAR,"abundance")
HillResultPIN
HillResultMAT
HillResultPIN<-Diversity(data$PINAR,"abundance")
HillResultPIN
HillResultPIN<-Diversity(data$PINAR,"abundance")
HillResultPIN
HillResultMAT
HillResultPIN<-Diversity(data$PINAR,"abundance")
HillResultPIN
#Importando los datos a R
data <- read_excel("C:/Users/VE-UGR-0208/Desktop/DEI/Datos Trabajo 2023-24_Alba.xlsx")
HillResultMAT<-Diversity(data$MATORRAL,"abundance")
HillResultMAT
HillResultPIN<-Diversity(data$PINAR,"abundance")
HillResultPIN
#Importando los datos a R
data <- read_excel("C:/Users/VE-UGR-0208/Desktop/DEI/Datos Trabajo 2023-24_Alba.xlsx")
HillResultPIN<-Diversity(data$PINAR,"abundance")
sum(is.na(data$PINAR))
sum(is.na(data$MATORRAL))
#Importando los datos a R
data <- read_excel("C:/Users/VE-UGR-0208/Desktop/DEI/Datos Trabajo 2023-24_Alba.xlsx")
HillResultPIN<-Diversity(data$PINAR,"abundance")
data$PINAR <- na.omit(data$PINAR)
HillResultPIN<-Diversity(data$PINAR,"abundance")
#Importando los datos a R
data <- read_excel("C:/Users/VE-UGR-0208/Desktop/DEI/Datos Trabajo 2023-24_Alba.xlsx")
#Importando los datos a R
data <- read_excel("C:/Users/VE-UGR-0208/Desktop/DEI/Datos Trabajo 2023-24_Alba.xlsx")
HillResultPIN<-Diversity(data$PINAR,"abundance")
#Importando los datos a R
data <- read_excel("C:/Users/VE-UGR-0208/Desktop/DEI/Datos Trabajo 2023-24_Alba.xlsx")
HillResultPIN<-Diversity(data$PINAR,"abundance")
HillResultPIN
#Importando los datos a R
data <- read_excel("C:/Users/VE-UGR-0208/Desktop/DEI/Datos Trabajo 2023-24.xlsx")
HillResultPIN<-Diversity(data$PINAR,"abundance")
HillResultPIN
HillResultPIN
HillResultMAT
??readxl
library(readxl)
datos <-read_excel("C:\Users\VE-UGR-0208\Desktop\TFM\rTFM\Resultados_puntos_analisis.xlsx")
datos <-read_excel("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Resultados_puntos_analisis.xlsx")
getwd()
View(datos)
datos <-read_excel("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Resultados_puntos_analisis.xlsx", range = "A1:O2081")
View(datos)
summary(datos)
pie(datos)
pie(datos$COMPARACIÓN)
table(datos)
table(datos$COMPARACIÓN)
pie(table(datos$COMPARACIÓN))
library(readxl)
datos <-read_excel("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Resultados_puntos_analisis.xlsx", range = "A1:O2081")
pie(table(datos$COMPARACION))
pie(table(datos$SIOSE__USO))
pie(table(datos$MUCVA__USO))
pie(table(datos$SIOSE__USO))
table(datos$MUCVA__USO)
table(datos$SIOSE__USO)
?chisq.test
?chisq.test(table(datos$COMPARACION))
chisq.test(table(datos$COMPARACION))
summary(datos)
summary(datos)
chisq.test(table(datos$COMPARACION))
library(ggplot2)
# Gráfico de barras apiladas
ggplot(datos, aes(x = MUCVA__U1, fill = COMPARACION)) +
geom_bar(position = "fill") +
labs(title = "Comparación de Usos del Suelo entre 1984 y Actualidad", x = "Uso del Suelo en 1984", y = "Proporción") +
theme_minimal()
# Gráfico de barras apiladas
ggplot(datos, aes(x = datos$MUCVA__U1, fill = COMPARACION)) +
geom_bar(position = "fill") +
labs(title = "Comparación de Usos del Suelo entre 1984 y Actualidad", x = "Uso del Suelo en 1984", y = "Proporción") +
theme_minimal()
# Gráfico de barras apiladas
ggplot(datos, aes(x = datos$MUCVA__USO, fill = COMPARACION)) +
geom_bar(position = "fill") +
labs(title = "Comparación de Usos del Suelo entre 1984 y Actualidad", x = "Uso del Suelo en 1984", y = "Proporción") +
theme_minimal()
# Gráfico de barras apiladas
ggplot(datos, aes(x = datos$MUCVA__USO, fill = COMPARACION)) +
geom_bar(position = "fill") +
labs(title = "Comparación de Usos del Suelo entre 1984 y Actualidad", x = "Uso del Suelo en 1984", y = "Proporción") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# Gráfico de barras apiladas
ggplot(datos, aes(x = datos$MUCVA__USO, fill = COMPARACION)) +
geom_bar(position = "fill") +
labs(title = "Comparación de Usos del Suelo entre 1984 y Actualidad", x = "Uso del Suelo en 1984", y = "Proporción") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=1))
?ggplot
# Gráfico de barras apiladas
ggplot(datos, aes(x = datos$MUCVA__USO, fill = COMPARACION)) +
geom_bar(position = "fill") +
labs(title = "Comparación de Usos del Suelo entre 1984 y Actualidad", x = "Uso del Suelo en 1984", y = "Proporción") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=3))
?element_text
# Gráfico de barras apiladas
ggplot(datos, aes(x = datos$MUCVA__USO, fill = COMPARACION)) +
geom_bar(position = "fill") +
labs(title = "Comparación de Usos del Suelo entre 1984 y Actualidad", x = "Uso del Suelo en 1984", y = "Proporción") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=0))
?ggplot
?dplyrr
??dplyrr
??dplyr
library(dplyr)
# Contar las frecuencias de cada clase de uso del suelo por humedal
tabla_frecuencia <- table(datos$HUMEDAL, datos$MUCVA__USO)
# Contar las frecuencias de cada clase de uso del suelo por humedal
tabla_frecuencia <- table(datos$NOMBRE_HUM, datos$MUCVA__USO)
# Contar la frecuencia de cada clase por humedal
frecuencia_clase_humedal <- datos %>%
group_by(NOMBRE_HUM, MUCVA__USO) %>%
count()
# Ver los resultados
print(frecuencia_clase_humedal)
# Ver los resultados
print(frecuencia_clase_humedal, n=95)
# Ver los resultados
View(frecuencia_clase_humedal)
# Gráfico de barras apiladas con facetas por humedal
ggplot(datos, aes(x = MUCVA__USO, fill = NOMBRE_HUM)) +
geom_bar(position = "fill") +
labs(title = "Comparación de Usos del Suelo entre 1984 y 2023 por Humedal",
x = "Uso del Suelo en 1984",
y = "Proporción") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
facet_wrap(~ NOMBRE_HUM, scales = "free_x")
# Gráfico de barras apiladas para mostrar la proporción de cada uso del suelo por humedal
ggplot(datos, aes(x = MUCVA__USO, fill = NOMBRE_HUM)) +
geom_bar(position = "fill") +
labs(title = "Proporción de Usos del Suelo en 1984 y Actualidad por Humedal",
x = "Uso del Suelo",
y = "Proporción") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Cargar las librerías
library(readxl)
library(dplyr)
library(ggplot2)
# Leer los archivos
datos <-read_excel("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Resultados_puntos_analisis.xlsx", range = "A1:O2081")
head(datos)
df_area_usos84 <-read_excel("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Resultados_puntos_analisis.xlsx", sheet = 2)
df_area_usos20 <-read_excel("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Resultados_puntos_analisis.xlsx", sheet = 3)
# Análisis exploratorio de los datos: gráficas #################################
pie(table(datos$COMPARACION))
pie(table(datos$MUCVA__USO)) #Usos 1984
pie(table(datos$SIOSE__USO)) #Usos 2023
# Gráfico de barras apiladas
ggplot(datos, aes(x = datos$MUCVA__USO, fill = COMPARACION)) +
geom_bar(position = "fill") +
labs(title = "Comparación de Usos del Suelo entre 1984 y 2023", x = "Uso del Suelo en 1984", y = "Proporción") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=0))
# Contar las frecuencias de cada clase de uso del suelo por humedal
tabla_frecuencia <- table(datos$NOMBRE_HUM, datos$MUCVA__USO)
# Contar la frecuencia de cada clase por humedal
frecuencia_clase_humedal <- datos %>%
group_by(NOMBRE_HUM, MUCVA__USO) %>%
count()
# Ver los resultados
View(frecuencia_clase_humedal)
################################################################################
# Gráfico de barras apiladas para mostrar la proporción de cada uso del suelo por humedal RELATIVO
ggplot(datos, aes(x = MUCVA__USO, fill = NOMBRE_HUM)) +
geom_bar(position = "fill") +
labs(title = "Proporción de usos del suelo en 1984 por humedal",
x = "Uso del suelo",
y = "Proporción") +
scale_fill_viridis_d(option = "H") + #B o H están bien, se distinguen los humedales
theme_minimal() +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust = 0))
ggplot(datos, aes(x = SIOSE__USO, fill = NOMBRE_HUM)) +
geom_bar(position = "fill") +
labs(title = "Proporción de usos del suelo en la actualidad por humedal",
x = "Uso del suelo",
y = "Proporción") +
scale_fill_viridis_d(option = "H") + #B o H están bien, se distinguen los humedales
theme_minimal() +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=0))
# ABSOLUTO #####################################################################
ggplot(datos, aes(x = MUCVA__USO, fill = NOMBRE_HUM)) +
geom_bar(position = "stack") +  # Cambia "fill" por "stack" para contar valores absolutos
labs(title = "Número de hectáreas por uso del suelo en 1984 por humedal",
x = "Uso del suelo",
y = "Hectáreas") +
scale_fill_viridis_d(option = "H") + #B o H están bien, se distinguen los humedales
ylim(0, 800) +  # Establece el límite del eje y entre 0 y 800
theme_minimal() +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust = 0))
ggplot(datos, aes(x = SIOSE__USO, fill = NOMBRE_HUM)) +
geom_bar(position = "stack") +  # Cambia "fill" por "stack" para contar valores absolutos
labs(title = "Número de hectáreas por uso del suelo en la actualidad por humedal",
x = "Uso del suelo",
y = "Hectáreas") +
scale_fill_viridis_d(option = "H") + #B o H están bien, se distinguen los humedales
ylim(0, 800) +  # Establece el límite del eje y entre 0 y 800
theme_minimal() +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=0))
result_area84 <- df_area_usos84 %>%
group_by(df_area_usos84$`_USOS_DEFI`) %>%
summarise(Total_Area = sum(AREA_POLIG))
result_area20 <- df_area_usos20 %>%
group_by(`_USOS_DEFI`) %>%
summarise(Total_Area = sum(AREA_POLIG))
################################################################################
# Filtrar datos dentro y fuera de humedales
dentro_humedales <- datos %>% filter(ZONA == "Humedal")
fuera_humedales <- datos %>% filter(ZONA != "Humedal")
# Filtrar humedales costeros e interiores
humedales_costeros <- dentro_humedales %>% filter(GRUPO_TIPO == "Costeros")
humedales_interior <- dentro_humedales %>% filter(GRUPO_TIPO != "Costeros")
# Contar los registros en cada grupo
count_humedales <- datos %>%
group_by(ZONA, GRUPO_TIPO) %>%
summarize(n = n())
print(count_humedales)
# Gráfico de barras para comparar las zonas
ggplot(count_humedales, aes(x = GRUPO_TIPO, y = n, fill = ZONA)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Comparación de Zonas y Tipos de Humedales",
x = "Tipo de Humedal", y = "Número de Registros") +
theme_minimal()
###############################################################################
# Agrupar por ZONA y COMPARACION, y contar las ocurrencias
comparacion_resumen <- datos %>%
group_by(ZONA, COMPARACION) %>%
summarize(count = n()) %>%
ungroup()
print(comparacion_resumen)
# Calcular proporciones
comparacion_proporciones <- comparacion_resumen %>%
group_by(ZONA) %>%
mutate(proporcion = count / sum(count))
print(comparacion_proporciones)
# Gráfico de barras apiladas
ggplot(comparacion_proporciones, aes(x = ZONA, y = proporcion, fill = COMPARACION)) +
geom_bar(stat = "identity") +
labs(title = "Comparación de Cambios de Uso del Suelo Dentro y Fuera de Humedales",
x = "Zona (Dentro/Fuera del Humedal)", y = "Proporción") +
scale_y_continuous(labels = scales::percent_format()) +
theme_minimal()
# Para evaluar los cambios específicos de uso del suelo ########################
# Crear una columna que muestre el cambio de uso del suelo
data <- datos %>%
mutate(cambio_uso = paste(MUCVA__USO, "a", SIOSE__USO))
# Ver los primeros registros para confirmar
head(data)
# Agrupar por zona y tipo de cambio de uso del suelo, y contar las ocurrencias
cambio_uso_resumen <- data %>%
group_by(ZONA, cambio_uso) %>%
summarize(count = n()) %>%
ungroup()
# Ver los resultados
print(cambio_uso_resumen)
# Gráfico de barras apiladas por tipo de cambio
ggplot(cambio_uso_resumen, aes(x = ZONA, y = count, fill = cambio_uso)) +
geom_bar(stat = "identity") +
labs(title = "Cambios de Uso del Suelo Dentro y Fuera de Humedales",
x = "Zona (Dentro/Fuera del Humedal)", y = "Número de Cambios") +
theme_minimal()
# Gráfico de barras agrupadas
ggplot(cambio_uso_resumen, aes(x = cambio_uso, y = count, fill = ZONA)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Cambios Específicos de Uso del Suelo por Zona",
x = "Cambio de Uso del Suelo", y = "Número de Cambios") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Resumen descriptivo
cambio_uso_resumen %>%
arrange(desc(count))
# Crear tabla de contingencia
tabla_contingencia <- table(data$ZONA, data$cambio_uso)
# Realizar prueba de Chi-cuadrado
chi_test <- chisq.test(tabla_contingencia)
print(chi_test)
tabla_contingencia
tabla_contingencia
as.data.frame(tabla_contingencia)
library(tidyr)
# Transformar la tabla de formato largo a formato ancho
tabla_ancha <- tabla_contingencia %>%
pivot_wider(names_from = Var1, values_from = Freq)
# Transformar la tabla de formato largo a formato ancho
tabla_ancha <- as.data.frame(tabla_contingencia) %>%
pivot_wider(names_from = Var1, values_from = Freq)
# Ver el resultado
print(tabla_ancha)
# Ver el resultado
View(tabla_ancha)
head(datos)
#
cambio_uso_cost_int <- data %>%
group_by(GRUPO_TIPO, cambio_uso) %>%
summarize(count = n()) %>%
ungroup()
# Ver los resultados
print(cambio_uso_cost_int)
# Ver los resultados
View(cambio_uso_cost_int)
# Crear tabla de contingencia
tabla_contingencia_ci <- table(data$GRUPO_TIPO, data$cambio_uso)
# Transformar la tabla de formato largo a formato ancho
tabla_ancha <- as.data.frame(tabla_contingencia_ci) %>%
pivot_wider(names_from = Var1, values_from = Freq)
# Ver el resultado
print(tabla_ancha)
# Transformar la tabla de formato largo a formato ancho
tabla_ancha_ci <- as.data.frame(tabla_contingencia_ci) %>%
pivot_wider(names_from = Var1, values_from = Freq)
# Ver el resultado
print(tabla_ancha_ci)
# Ver el resultado
View(tabla_ancha_ci)
# Leer los archivos
datos <-read_excel("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Resultados_puntos_analisis.xlsx", range = "A1:O2081")
head(datos)
# Leer los archivos
datos <-read_excel("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Resultados_puntos_analisis.xlsx", range = "A1:P2081")
head(datos)
View(datos)
# Leer los archivos
datos <-read_excel("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Resultados_puntos_analisis.xlsx", range = "A1:P2081")
View(datos)
# Leer los archivos
datos <-read_excel("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Resultados_puntos_analisis.xlsx", range = "A1:O2081")
View(datos)
# Leer los archivos
datos <-read_excel("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Resultados_puntos_analisis.xlsx", range = "A1:O2081")
View(datos)
# Leer los archivos
datos <-read_excel("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Resultados_puntos_analisis.xlsx", range = "A1:O2081")
################################################################################
cambio_uso_cost_int <- data %>%
group_by(GRUPO_TIPO, cambio_uso) %>%
summarize(count = n()) %>%
ungroup()
# Ver los resultados
print(cambio_uso_cost_int)
# Crear tabla de contingencia
tabla_contingencia_ci <- table(data$GRUPO_TIPO, data$cambio_uso)
# Transformar la tabla de formato largo a formato ancho
tabla_ancha_ci <- as.data.frame(tabla_contingencia_ci) %>%
pivot_wider(names_from = Var1, values_from = Freq)
# Ver el resultado
View(tabla_ancha_ci)
# Ver el resultado
View(tabla_ancha_ci)
################################################################################
# Para evaluar los cambios específicos de uso del suelo ########################
# Crear una columna que muestre el cambio de uso del suelo
data <- datos %>%
mutate(cambio_uso = paste(MUCVA__USO, "a", SIOSE__USO))
################################################################################
# Crear una columna que muestre el cambio de uso del suelo
data <- datos %>%
mutate(cambio_uso = paste(MUCVA__USO, "a", SIOSE__USO))
cambio_uso_cost_int <- data %>%
group_by(GRUPO_TIPO, cambio_uso) %>%
summarize(count = n()) %>%
ungroup()
# Ver los resultados
print(cambio_uso_cost_int)
# Crear tabla de contingencia
tabla_contingencia_ci <- table(data$GRUPO_TIPO, data$cambio_uso)
# Transformar la tabla de formato largo a formato ancho
tabla_ancha_ci <- as.data.frame(tabla_contingencia_ci) %>%
pivot_wider(names_from = Var1, values_from = Freq)
# Ver el resultado
View(tabla_ancha_ci)
# Ver los resultados
print(cambio_uso_cost_int)
# Crear tabla de contingencia
tabla_contingencia_ci <- table(data$GRUPO_TIPO, data$cambio_uso)
# Transformar la tabla de formato largo a formato ancho
tabla_ancha_ci <- as.data.frame(tabla_contingencia_ci) %>%
pivot_wider(names_from = Var1, values_from = Freq)
# Ver el resultado
View(tabla_ancha_ci)
?pivot_wider
vignette("pivot")
#library
library(funtimes)
library(Kendall)
install.packages("funtimes")
install.packages("Kendall")
install.packages(c("raster", "rgdal", "sp"))
# Leer un único archivo raster
raster1 <- raster("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM/Google Earth Engine/Mann-Kendall/zone01b_tau.tif")
library(raster)
library(rgdal)
getwd()
setwd("C:/Users/VE-UGR-0208/Desktop/TFM/rTFM")
